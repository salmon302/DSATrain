[
  {
    "id": "lc_2",
    "source": "leetcode",
    "title": "Add Two Numbers",
    "description": "You are given two non-empty linked lists representing two non-negative integers.",
    "difficulty": {
      "level": "medium",
      "rating": 2115,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 2115,
      "standardized_level": "hard"
    },
    "tags": [
      "linked_list",
      "math",
      "recursion"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "microsoft"
    ],
    "constraints": {
      "acceptance_rate": "38.5%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788429",
      "last_updated": "2025-07-29T14:48:02.788431",
      "source_url": "https://leetcode.com/problems/add-two-numbers/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 38.5,
      "companies": [
        "Google",
        "Amazon",
        "Microsoft"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 61.0
  },
  {
    "id": "lc_3",
    "source": "leetcode",
    "title": "Longest Substring Without Repeating Characters",
    "description": "Given a string s, find the length of the longest substring without repeating characters.",
    "difficulty": {
      "level": "medium",
      "rating": 2162,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 2162,
      "standardized_level": "hard"
    },
    "tags": [
      "hash_table",
      "string",
      "sliding_window"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "facebook",
      "apple"
    ],
    "constraints": {
      "acceptance_rate": "33.8%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788440",
      "last_updated": "2025-07-29T14:48:02.788441",
      "source_url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 33.8,
      "companies": [
        "Google",
        "Amazon",
        "Facebook",
        "Apple"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 61.0
  },
  {
    "id": "lc_53",
    "source": "leetcode",
    "title": "Maximum Subarray",
    "description": "Given an integer array nums, find the subarray with the largest sum, and return its sum.",
    "difficulty": {
      "level": "medium",
      "rating": 1999,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1999,
      "standardized_level": "medium"
    },
    "tags": [
      "array",
      "divide_and_conquer",
      "dynamic_programming"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "microsoft",
      "bloomberg"
    ],
    "constraints": {
      "acceptance_rate": "50.1%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788472",
      "last_updated": "2025-07-29T14:48:02.788474",
      "source_url": "https://leetcode.com/problems/maximum-subarray/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 50.1,
      "companies": [
        "Google",
        "Amazon",
        "Microsoft",
        "Bloomberg"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 61.0
  },
  {
    "id": "lc_21",
    "source": "leetcode",
    "title": "Merge Two Sorted Lists",
    "description": "You are given the heads of two sorted linked lists list1 and list2.",
    "difficulty": {
      "level": "easy",
      "rating": 1189,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1389,
      "standardized_level": "medium"
    },
    "tags": [
      "linked_list",
      "recursion"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "microsoft",
      "apple"
    ],
    "constraints": {
      "acceptance_rate": "62.1%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788463",
      "last_updated": "2025-07-29T14:48:02.788465",
      "source_url": "https://leetcode.com/problems/merge-two-sorted-lists/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 62.1,
      "companies": [
        "Google",
        "Amazon",
        "Microsoft",
        "Apple"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 59.0
  },
  {
    "id": "lc_4",
    "source": "leetcode",
    "title": "Median of Two Sorted Arrays",
    "description": "Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.",
    "difficulty": {
      "level": "hard",
      "rating": 3443,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 3443,
      "standardized_level": "hard"
    },
    "tags": [
      "array",
      "binary_search",
      "divide_and_conquer"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "microsoft",
      "apple"
    ],
    "constraints": {
      "acceptance_rate": "37.1%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788448",
      "last_updated": "2025-07-29T14:48:02.788450",
      "source_url": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 37.1,
      "companies": [
        "Google",
        "Amazon",
        "Microsoft",
        "Apple"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 58.0
  },
  {
    "id": "lc_200",
    "source": "leetcode",
    "title": "Number of Islands",
    "description": "Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.",
    "difficulty": {
      "level": "medium",
      "rating": 1923,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1923,
      "standardized_level": "medium"
    },
    "tags": [
      "array",
      "depth_first_search",
      "breadth_first_search",
      "union_find",
      "matrix"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "facebook",
      "microsoft"
    ],
    "constraints": {
      "acceptance_rate": "57.7%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788488",
      "last_updated": "2025-07-29T14:48:02.788489",
      "source_url": "https://leetcode.com/problems/number-of-islands/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 57.7,
      "companies": [
        "Google",
        "Amazon",
        "Facebook",
        "Microsoft"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 57.0
  },
  {
    "id": "lc_1",
    "source": "leetcode",
    "title": "Two Sum",
    "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    "difficulty": {
      "level": "easy",
      "rating": 1254,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1454,
      "standardized_level": "medium"
    },
    "tags": [
      "array",
      "hash_table"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "facebook",
      "microsoft"
    ],
    "constraints": {
      "acceptance_rate": "49.1%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788396",
      "last_updated": "2025-07-29T14:48:02.788415",
      "source_url": "https://leetcode.com/problems/two-sum/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 49.1,
      "companies": [
        "Google",
        "Amazon",
        "Facebook",
        "Microsoft"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 55.0
  },
  {
    "id": "lc_20",
    "source": "leetcode",
    "title": "Valid Parentheses",
    "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.",
    "difficulty": {
      "level": "easy",
      "rating": 1296,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1496,
      "standardized_level": "medium"
    },
    "tags": [
      "string",
      "stack"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "facebook",
      "microsoft"
    ],
    "constraints": {
      "acceptance_rate": "40.7%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788456",
      "last_updated": "2025-07-29T14:48:02.788457",
      "source_url": "https://leetcode.com/problems/valid-parentheses/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 40.7,
      "companies": [
        "Google",
        "Amazon",
        "Facebook",
        "Microsoft"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 55.0
  },
  {
    "id": "lc_121",
    "source": "leetcode",
    "title": "Best Time to Buy and Sell Stock",
    "description": "You are given an array prices where prices[i] is the price of a given stock on the ith day.",
    "difficulty": {
      "level": "easy",
      "rating": 1229,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1429,
      "standardized_level": "medium"
    },
    "tags": [
      "array",
      "dynamic_programming"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "facebook",
      "microsoft"
    ],
    "constraints": {
      "acceptance_rate": "54.2%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788480",
      "last_updated": "2025-07-29T14:48:02.788482",
      "source_url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 54.2,
      "companies": [
        "Google",
        "Amazon",
        "Facebook",
        "Microsoft"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 55.0
  },
  {
    "id": "lc_238",
    "source": "leetcode",
    "title": "Product of Array Except Self",
    "description": "Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].",
    "difficulty": {
      "level": "medium",
      "rating": 1850,
      "source_scale": "leetcode_estimated",
      "standardized_rating": 1850,
      "standardized_level": "medium"
    },
    "tags": [
      "array",
      "prefix_sum"
    ],
    "company_tags": [
      "google",
      "google",
      "amazon",
      "facebook",
      "microsoft"
    ],
    "constraints": {
      "acceptance_rate": "65.0%"
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:48:02.788495",
      "last_updated": "2025-07-29T14:48:02.788496",
      "source_url": "https://leetcode.com/problems/product-of-array-except-self/",
      "acquisition_method": "static_dataset",
      "acceptance_rate": 65.0,
      "companies": [
        "Google",
        "Amazon",
        "Facebook",
        "Microsoft"
      ],
      "is_google_tagged": true
    },
    "google_relevance_score": 49.0
  },
  {
    "id": "cf_979_D",
    "source": "codeforces",
    "title": "Kuro and GCD and XOR and SUM",
    "description": "Kuro and GCD and XOR and SUM",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "brute_force",
      "data_structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number_theory",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435920",
      "last_updated": "2025-07-29T14:46:19.435922",
      "source_url": "https://codeforces.com/contest/979/problem/D",
      "acquisition_method": "api",
      "contest_id": 979,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 32.0
  },
  {
    "id": "cf_2093_G",
    "source": "codeforces",
    "title": "Shorten the Array",
    "description": "Shorten the Array",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "strings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397504",
      "last_updated": "2025-07-29T14:46:19.397506",
      "source_url": "https://codeforces.com/contest/2093/problem/G",
      "acquisition_method": "api",
      "contest_id": 2093,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_2064_D",
    "source": "codeforces",
    "title": "Eating",
    "description": "Eating",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398371",
      "last_updated": "2025-07-29T14:46:19.398372",
      "source_url": "https://codeforces.com/contest/2064/problem/D",
      "acquisition_method": "api",
      "contest_id": 2064,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_1537_E2",
    "source": "codeforces",
    "title": "Erase and Extend (Hard Version)",
    "description": "Erase and Extend (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "hashing",
      "string_suffix_structures",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419233",
      "last_updated": "2025-07-29T14:46:19.419235",
      "source_url": "https://codeforces.com/contest/1537/problem/E2",
      "acquisition_method": "api",
      "contest_id": 1537,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_1537_E1",
    "source": "codeforces",
    "title": "Erase and Extend (Easy Version)",
    "description": "Erase and Extend (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "string_suffix_structures",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419240",
      "last_updated": "2025-07-29T14:46:19.419242",
      "source_url": "https://codeforces.com/contest/1537/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1537,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_1516_D",
    "source": "codeforces",
    "title": "Cut",
    "description": "Cut",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "graphs",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419906",
      "last_updated": "2025-07-29T14:46:19.419908",
      "source_url": "https://codeforces.com/contest/1516/problem/D",
      "acquisition_method": "api",
      "contest_id": 1516,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_1416_C",
    "source": "codeforces",
    "title": "XOR Inverse",
    "description": "XOR Inverse",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "math",
      "sortings",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422651",
      "last_updated": "2025-07-29T14:46:19.422652",
      "source_url": "https://codeforces.com/contest/1416/problem/C",
      "acquisition_method": "api",
      "contest_id": 1416,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_79_C",
    "source": "codeforces",
    "title": "Beaver",
    "description": "Beaver",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.456783",
      "last_updated": "2025-07-29T14:46:19.456784",
      "source_url": "https://codeforces.com/contest/79/problem/C",
      "acquisition_method": "api",
      "contest_id": 79,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_2063_F1",
    "source": "codeforces",
    "title": "Counting Is Not Fun (Easy Version)",
    "description": "Counting Is Not Fun (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "hashing",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398407",
      "last_updated": "2025-07-29T14:46:19.398408",
      "source_url": "https://codeforces.com/contest/2063/problem/F1",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_1895_E",
    "source": "codeforces",
    "title": "Infinite Card Game",
    "description": "Infinite Card Game",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "games",
      "graphs",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403642",
      "last_updated": "2025-07-29T14:46:19.403644",
      "source_url": "https://codeforces.com/contest/1895/problem/E",
      "acquisition_method": "api",
      "contest_id": 1895,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_1866_K",
    "source": "codeforces",
    "title": "Keen Tree Calculation",
    "description": "Keen Tree Calculation",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404324",
      "last_updated": "2025-07-29T14:46:19.404325",
      "source_url": "https://codeforces.com/contest/1866/problem/K",
      "acquisition_method": "api",
      "contest_id": 1866,
      "problem_index": "K",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_1750_E",
    "source": "codeforces",
    "title": "Bracket Cost",
    "description": "Bracket Cost",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413015",
      "last_updated": "2025-07-29T14:46:19.413016",
      "source_url": "https://codeforces.com/contest/1750/problem/E",
      "acquisition_method": "api",
      "contest_id": 1750,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_1715_E",
    "source": "codeforces",
    "title": "Long Way Home",
    "description": "Long Way Home",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413996",
      "last_updated": "2025-07-29T14:46:19.413997",
      "source_url": "https://codeforces.com/contest/1715/problem/E",
      "acquisition_method": "api",
      "contest_id": 1715,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_1740_I",
    "source": "codeforces",
    "title": "Arranging Crystal Balls",
    "description": "Arranging Crystal Balls",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "divide_and_conquer",
      "dp",
      "geometry",
      "graphs",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413307",
      "last_updated": "2025-07-29T14:46:19.413308",
      "source_url": "https://codeforces.com/contest/1740/problem/I",
      "acquisition_method": "api",
      "contest_id": 1740,
      "problem_index": "I",
      "solved_count": 0
    },
    "google_relevance_score": 25.0
  },
  {
    "id": "cf_1470_E",
    "source": "codeforces",
    "title": "Strange Permutation",
    "description": "Strange Permutation",
    "difficulty": {
      "level": "hard",
      "rating": 3200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "data_structures",
      "dp",
      "graphs",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421244",
      "last_updated": "2025-07-29T14:46:19.421245",
      "source_url": "https://codeforces.com/contest/1470/problem/E",
      "acquisition_method": "api",
      "contest_id": 1470,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 25.0
  },
  {
    "id": "cf_2122_D",
    "source": "codeforces",
    "title": "Traffic Lights",
    "description": "Traffic Lights",
    "difficulty": {
      "level": "unrated",
      "rating": null,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "graphs",
      "greedy",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396762",
      "last_updated": "2025-07-29T14:46:19.396763",
      "source_url": "https://codeforces.com/contest/2122/problem/D",
      "acquisition_method": "api",
      "contest_id": 2122,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2118_D2",
    "source": "codeforces",
    "title": "Red Light, Green Light (Hard version)",
    "description": "Red Light, Green Light (Hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396889",
      "last_updated": "2025-07-29T14:46:19.396890",
      "source_url": "https://codeforces.com/contest/2118/problem/D2",
      "acquisition_method": "api",
      "contest_id": 2118,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2112_E",
    "source": "codeforces",
    "title": "Tree Colorings",
    "description": "Tree Colorings",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "graphs",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397046",
      "last_updated": "2025-07-29T14:46:19.397048",
      "source_url": "https://codeforces.com/contest/2112/problem/E",
      "acquisition_method": "api",
      "contest_id": 2112,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2110_D",
    "source": "codeforces",
    "title": "Fewer Batteries",
    "description": "Fewer Batteries",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "hashing"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397107",
      "last_updated": "2025-07-29T14:46:19.397108",
      "source_url": "https://codeforces.com/contest/2110/problem/D",
      "acquisition_method": "api",
      "contest_id": 2110,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2108_C",
    "source": "codeforces",
    "title": "Neo's Escape",
    "description": "Neo's Escape",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397178",
      "last_updated": "2025-07-29T14:46:19.397179",
      "source_url": "https://codeforces.com/contest/2108/problem/C",
      "acquisition_method": "api",
      "contest_id": 2108,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2069_D",
    "source": "codeforces",
    "title": "Palindrome Shuffle",
    "description": "Palindrome Shuffle",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "greedy",
      "hashing",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398149",
      "last_updated": "2025-07-29T14:46:19.398150",
      "source_url": "https://codeforces.com/contest/2069/problem/D",
      "acquisition_method": "api",
      "contest_id": 2069,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2063_D",
    "source": "codeforces",
    "title": "Game With Triangles",
    "description": "Game With Triangles",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary_search",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398417",
      "last_updated": "2025-07-29T14:46:19.398418",
      "source_url": "https://codeforces.com/contest/2063/problem/D",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2063_C",
    "source": "codeforces",
    "title": "Remove Exactly Two",
    "description": "Remove Exactly Two",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398421",
      "last_updated": "2025-07-29T14:46:19.398423",
      "source_url": "https://codeforces.com/contest/2063/problem/C",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2056_D",
    "source": "codeforces",
    "title": "Unique Median",
    "description": "Unique Median",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "combinatorics",
      "data_structures",
      "divide_and_conquer",
      "dp"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398635",
      "last_updated": "2025-07-29T14:46:19.398636",
      "source_url": "https://codeforces.com/contest/2056/problem/D",
      "acquisition_method": "api",
      "contest_id": 2056,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2040_E",
    "source": "codeforces",
    "title": "Control of Randomness",
    "description": "Control of Randomness",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399186",
      "last_updated": "2025-07-29T14:46:19.399188",
      "source_url": "https://codeforces.com/contest/2040/problem/E",
      "acquisition_method": "api",
      "contest_id": 2040,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2032_D",
    "source": "codeforces",
    "title": "Genokraken",
    "description": "Genokraken",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "graphs",
      "greedy",
      "implementation",
      "interactive",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399564",
      "last_updated": "2025-07-29T14:46:19.399565",
      "source_url": "https://codeforces.com/contest/2032/problem/D",
      "acquisition_method": "api",
      "contest_id": 2032,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2031_D",
    "source": "codeforces",
    "title": "Penchick and Desert Rabbit",
    "description": "Penchick and Desert Rabbit",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399591",
      "last_updated": "2025-07-29T14:46:19.399592",
      "source_url": "https://codeforces.com/contest/2031/problem/D",
      "acquisition_method": "api",
      "contest_id": 2031,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2027_D2",
    "source": "codeforces",
    "title": "The Endspeaker (Hard Version)",
    "description": "The Endspeaker (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399722",
      "last_updated": "2025-07-29T14:46:19.399723",
      "source_url": "https://codeforces.com/contest/2027/problem/D2",
      "acquisition_method": "api",
      "contest_id": 2027,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2027_D1",
    "source": "codeforces",
    "title": "The Endspeaker (Easy Version)",
    "description": "The Endspeaker (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399727",
      "last_updated": "2025-07-29T14:46:19.399728",
      "source_url": "https://codeforces.com/contest/2027/problem/D1",
      "acquisition_method": "api",
      "contest_id": 2027,
      "problem_index": "D1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2018_B",
    "source": "codeforces",
    "title": "Speedbreaker",
    "description": "Speedbreaker",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399969",
      "last_updated": "2025-07-29T14:46:19.399970",
      "source_url": "https://codeforces.com/contest/2018/problem/B",
      "acquisition_method": "api",
      "contest_id": 2018,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1976_D",
    "source": "codeforces",
    "title": "Invertible Bracket Sequences",
    "description": "Invertible Bracket Sequences",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "data_structures",
      "divide_and_conquer",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401292",
      "last_updated": "2025-07-29T14:46:19.401293",
      "source_url": "https://codeforces.com/contest/1976/problem/D",
      "acquisition_method": "api",
      "contest_id": 1976,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1968_G2",
    "source": "codeforces",
    "title": "Division + LCP (hard version)",
    "description": "Division + LCP (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "hashing",
      "math",
      "string_suffix_structures",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401564",
      "last_updated": "2025-07-29T14:46:19.401565",
      "source_url": "https://codeforces.com/contest/1968/problem/G2",
      "acquisition_method": "api",
      "contest_id": 1968,
      "problem_index": "G2",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1968_G1",
    "source": "codeforces",
    "title": "Division + LCP (easy version)",
    "description": "Division + LCP (easy version)",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "hashing",
      "string_suffix_structures",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401569",
      "last_updated": "2025-07-29T14:46:19.401570",
      "source_url": "https://codeforces.com/contest/1968/problem/G1",
      "acquisition_method": "api",
      "contest_id": 1968,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1857_G",
    "source": "codeforces",
    "title": "Counting Graphs",
    "description": "Counting Graphs",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "combinatorics",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404616",
      "last_updated": "2025-07-29T14:46:19.404617",
      "source_url": "https://codeforces.com/contest/1857/problem/G",
      "acquisition_method": "api",
      "contest_id": 1857,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1851_G",
    "source": "codeforces",
    "title": "Vlad and the Mountains",
    "description": "Vlad and the Mountains",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404760",
      "last_updated": "2025-07-29T14:46:19.409615",
      "source_url": "https://codeforces.com/contest/1851/problem/G",
      "acquisition_method": "api",
      "contest_id": 1851,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1845_D",
    "source": "codeforces",
    "title": "Rating System",
    "description": "Rating System",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409856",
      "last_updated": "2025-07-29T14:46:19.409857",
      "source_url": "https://codeforces.com/contest/1845/problem/D",
      "acquisition_method": "api",
      "contest_id": 1845,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1843_F1",
    "source": "codeforces",
    "title": "Omsk Metro (simple version)",
    "description": "Omsk Metro (simple version)",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409926",
      "last_updated": "2025-07-29T14:46:19.409928",
      "source_url": "https://codeforces.com/contest/1843/problem/F1",
      "acquisition_method": "api",
      "contest_id": 1843,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1827_B1",
    "source": "codeforces",
    "title": "Range Sorting (Easy Version)",
    "description": "Range Sorting (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "dsu",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.410623",
      "last_updated": "2025-07-29T14:46:19.410624",
      "source_url": "https://codeforces.com/contest/1827/problem/B1",
      "acquisition_method": "api",
      "contest_id": 1827,
      "problem_index": "B1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1811_G2",
    "source": "codeforces",
    "title": "Vlad and the Nice Paths (hard version)",
    "description": "Vlad and the Nice Paths (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "data_structures",
      "dp",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.410993",
      "last_updated": "2025-07-29T14:46:19.410995",
      "source_url": "https://codeforces.com/contest/1811/problem/G2",
      "acquisition_method": "api",
      "contest_id": 1811,
      "problem_index": "G2",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1801_D",
    "source": "codeforces",
    "title": "The way home",
    "description": "The way home",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "graphs",
      "greedy",
      "shortest_paths",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411394",
      "last_updated": "2025-07-29T14:46:19.411395",
      "source_url": "https://codeforces.com/contest/1801/problem/D",
      "acquisition_method": "api",
      "contest_id": 1801,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1739_D",
    "source": "codeforces",
    "title": "Reset K Edges",
    "description": "Reset K Edges",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413353",
      "last_updated": "2025-07-29T14:46:19.413355",
      "source_url": "https://codeforces.com/contest/1739/problem/D",
      "acquisition_method": "api",
      "contest_id": 1739,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1729_G",
    "source": "codeforces",
    "title": "Cut Substrings",
    "description": "Cut Substrings",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dp",
      "hashing",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413645",
      "last_updated": "2025-07-29T14:46:19.413646",
      "source_url": "https://codeforces.com/contest/1729/problem/G",
      "acquisition_method": "api",
      "contest_id": 1729,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1697_C",
    "source": "codeforces",
    "title": "awoo's Favorite Problem",
    "description": "awoo's Favorite Problem",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "implementation",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414605",
      "last_updated": "2025-07-29T14:46:19.414606",
      "source_url": "https://codeforces.com/contest/1697/problem/C",
      "acquisition_method": "api",
      "contest_id": 1697,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1671_E",
    "source": "codeforces",
    "title": "Preorder",
    "description": "Preorder",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "divide_and_conquer",
      "dp",
      "dsu",
      "hashing",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415312",
      "last_updated": "2025-07-29T14:46:19.415313",
      "source_url": "https://codeforces.com/contest/1671/problem/E",
      "acquisition_method": "api",
      "contest_id": 1671,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1632_D",
    "source": "codeforces",
    "title": "New Year Concert",
    "description": "New Year Concert",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "math",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416325",
      "last_updated": "2025-07-29T14:46:19.416326",
      "source_url": "https://codeforces.com/contest/1632/problem/D",
      "acquisition_method": "api",
      "contest_id": 1632,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1626_C",
    "source": "codeforces",
    "title": "Monsters And Spells",
    "description": "Monsters And Spells",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416459",
      "last_updated": "2025-07-29T14:46:19.416460",
      "source_url": "https://codeforces.com/contest/1626/problem/C",
      "acquisition_method": "api",
      "contest_id": 1626,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1608_C",
    "source": "codeforces",
    "title": "Game Master",
    "description": "Game Master",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417246",
      "last_updated": "2025-07-29T14:46:19.417247",
      "source_url": "https://codeforces.com/contest/1608/problem/C",
      "acquisition_method": "api",
      "contest_id": 1608,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1574_D",
    "source": "codeforces",
    "title": "The Strongest Build",
    "description": "The Strongest Build",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418074",
      "last_updated": "2025-07-29T14:46:19.418075",
      "source_url": "https://codeforces.com/contest/1574/problem/D",
      "acquisition_method": "api",
      "contest_id": 1574,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1548_B",
    "source": "codeforces",
    "title": "Integers Have Friends",
    "description": "Integers Have Friends",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "math",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418949",
      "last_updated": "2025-07-29T14:46:19.418951",
      "source_url": "https://codeforces.com/contest/1548/problem/B",
      "acquisition_method": "api",
      "contest_id": 1548,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1547_F",
    "source": "codeforces",
    "title": "Array Stabilization (GCD version)",
    "description": "Array Stabilization (GCD version)",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418964",
      "last_updated": "2025-07-29T14:46:19.418966",
      "source_url": "https://codeforces.com/contest/1547/problem/F",
      "acquisition_method": "api",
      "contest_id": 1547,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1535_E",
    "source": "codeforces",
    "title": "Gold Transfer",
    "description": "Gold Transfer",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419306",
      "last_updated": "2025-07-29T14:46:19.419308",
      "source_url": "https://codeforces.com/contest/1535/problem/E",
      "acquisition_method": "api",
      "contest_id": 1535,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1535_C",
    "source": "codeforces",
    "title": "Unstable String",
    "description": "Unstable String",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "implementation",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419316",
      "last_updated": "2025-07-29T14:46:19.419318",
      "source_url": "https://codeforces.com/contest/1535/problem/C",
      "acquisition_method": "api",
      "contest_id": 1535,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1503_C",
    "source": "codeforces",
    "title": "Travelling Salesman Problem",
    "description": "Travelling Salesman Problem",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "shortest_paths",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420320",
      "last_updated": "2025-07-29T14:46:19.420322",
      "source_url": "https://codeforces.com/contest/1503/problem/C",
      "acquisition_method": "api",
      "contest_id": 1503,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1497_E1",
    "source": "codeforces",
    "title": "Square-Free Division (easy version)",
    "description": "Square-Free Division (easy version)",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "math",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420514",
      "last_updated": "2025-07-29T14:46:19.420515",
      "source_url": "https://codeforces.com/contest/1497/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1497,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1492_C",
    "source": "codeforces",
    "title": "Maximum width",
    "description": "Maximum width",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420655",
      "last_updated": "2025-07-29T14:46:19.420656",
      "source_url": "https://codeforces.com/contest/1492/problem/C",
      "acquisition_method": "api",
      "contest_id": 1492,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1446_C",
    "source": "codeforces",
    "title": "Xor Tree",
    "description": "Xor Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421815",
      "last_updated": "2025-07-29T14:46:19.421817",
      "source_url": "https://codeforces.com/contest/1446/problem/C",
      "acquisition_method": "api",
      "contest_id": 1446,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1383_A",
    "source": "codeforces",
    "title": "String Transformation 1",
    "description": "String Transformation 1",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "strings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423496",
      "last_updated": "2025-07-29T14:46:19.423498",
      "source_url": "https://codeforces.com/contest/1383/problem/A",
      "acquisition_method": "api",
      "contest_id": 1383,
      "problem_index": "A",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1379_C",
    "source": "codeforces",
    "title": "Choosing flowers",
    "description": "Choosing flowers",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423603",
      "last_updated": "2025-07-29T14:46:19.423604",
      "source_url": "https://codeforces.com/contest/1379/problem/C",
      "acquisition_method": "api",
      "contest_id": 1379,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1285_D",
    "source": "codeforces",
    "title": "Dr. Evil Underscores",
    "description": "Dr. Evil Underscores",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427174",
      "last_updated": "2025-07-29T14:46:19.427179",
      "source_url": "https://codeforces.com/contest/1285/problem/D",
      "acquisition_method": "api",
      "contest_id": 1285,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1257_D",
    "source": "codeforces",
    "title": "Yet Another Monster Killing Problem",
    "description": "Yet Another Monster Killing Problem",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427872",
      "last_updated": "2025-07-29T14:46:19.427873",
      "source_url": "https://codeforces.com/contest/1257/problem/D",
      "acquisition_method": "api",
      "contest_id": 1257,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1175_E",
    "source": "codeforces",
    "title": "Minimal Segment Cover",
    "description": "Minimal Segment Cover",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431085",
      "last_updated": "2025-07-29T14:46:19.431086",
      "source_url": "https://codeforces.com/contest/1175/problem/E",
      "acquisition_method": "api",
      "contest_id": 1175,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_985_E",
    "source": "codeforces",
    "title": "Pencils and Boxes",
    "description": "Pencils and Boxes",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435767",
      "last_updated": "2025-07-29T14:46:19.435769",
      "source_url": "https://codeforces.com/contest/985/problem/E",
      "acquisition_method": "api",
      "contest_id": 985,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_965_E",
    "source": "codeforces",
    "title": "Short Code",
    "description": "Short Code",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.436083",
      "last_updated": "2025-07-29T14:46:19.436085",
      "source_url": "https://codeforces.com/contest/965/problem/E",
      "acquisition_method": "api",
      "contest_id": 965,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_833_B",
    "source": "codeforces",
    "title": "The Bakery",
    "description": "The Bakery",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.439103",
      "last_updated": "2025-07-29T14:46:19.439109",
      "source_url": "https://codeforces.com/contest/833/problem/B",
      "acquisition_method": "api",
      "contest_id": 833,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_777_C",
    "source": "codeforces",
    "title": "Alyona and Spreadsheet",
    "description": "Alyona and Spreadsheet",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.440382",
      "last_updated": "2025-07-29T14:46:19.440383",
      "source_url": "https://codeforces.com/contest/777/problem/C",
      "acquisition_method": "api",
      "contest_id": 777,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_722_D",
    "source": "codeforces",
    "title": "Generating Sets",
    "description": "Generating Sets",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.441729",
      "last_updated": "2025-07-29T14:46:19.441731",
      "source_url": "https://codeforces.com/contest/722/problem/D",
      "acquisition_method": "api",
      "contest_id": 722,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_533_E",
    "source": "codeforces",
    "title": "Correcting Mistakes",
    "description": "Correcting Mistakes",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.445606",
      "last_updated": "2025-07-29T14:46:19.445607",
      "source_url": "https://codeforces.com/contest/533/problem/E",
      "acquisition_method": "api",
      "contest_id": 533,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2126_G2",
    "source": "codeforces",
    "title": "Big Wins!  (hard version)",
    "description": "Big Wins!  (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396611",
      "last_updated": "2025-07-29T14:46:19.396612",
      "source_url": "https://codeforces.com/contest/2126/problem/G2",
      "acquisition_method": "api",
      "contest_id": 2126,
      "problem_index": "G2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2091_G",
    "source": "codeforces",
    "title": "Gleb and Boating",
    "description": "Gleb and Boating",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "dp",
      "graphs",
      "greedy",
      "math",
      "number_theory",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397561",
      "last_updated": "2025-07-29T14:46:19.397563",
      "source_url": "https://codeforces.com/contest/2091/problem/G",
      "acquisition_method": "api",
      "contest_id": 2091,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2089_B2",
    "source": "codeforces",
    "title": "Canteen (Hard Version)",
    "description": "Canteen (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "flows",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397621",
      "last_updated": "2025-07-29T14:46:19.397622",
      "source_url": "https://codeforces.com/contest/2089/problem/B2",
      "acquisition_method": "api",
      "contest_id": 2089,
      "problem_index": "B2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2077_E",
    "source": "codeforces",
    "title": "Another Folding Strip",
    "description": "Another Folding Strip",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "constructive_algorithms",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397869",
      "last_updated": "2025-07-29T14:46:19.397871",
      "source_url": "https://codeforces.com/contest/2077/problem/E",
      "acquisition_method": "api",
      "contest_id": 2077,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2041_I",
    "source": "codeforces",
    "title": "Auto Complete",
    "description": "Auto Complete",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "hashing",
      "implementation",
      "sortings",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399135",
      "last_updated": "2025-07-29T14:46:19.399136",
      "source_url": "https://codeforces.com/contest/2041/problem/I",
      "acquisition_method": "api",
      "contest_id": 2041,
      "problem_index": "I",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2030_F",
    "source": "codeforces",
    "title": "Orangutan Approved Subarrays",
    "description": "Orangutan Approved Subarrays",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399616",
      "last_updated": "2025-07-29T14:46:19.399617",
      "source_url": "https://codeforces.com/contest/2030/problem/F",
      "acquisition_method": "api",
      "contest_id": 2030,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2021_E3",
    "source": "codeforces",
    "title": "Digital Village (Extreme Version)",
    "description": "Digital Village (Extreme Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399868",
      "last_updated": "2025-07-29T14:46:19.399869",
      "source_url": "https://codeforces.com/contest/2021/problem/E3",
      "acquisition_method": "api",
      "contest_id": 2021,
      "problem_index": "E3",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2021_E1",
    "source": "codeforces",
    "title": "Digital Village (Easy Version)",
    "description": "Digital Village (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399877",
      "last_updated": "2025-07-29T14:46:19.399879",
      "source_url": "https://codeforces.com/contest/2021/problem/E1",
      "acquisition_method": "api",
      "contest_id": 2021,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2013_F1",
    "source": "codeforces",
    "title": "Game in Tree (Easy Version)",
    "description": "Game in Tree (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "games",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400022",
      "last_updated": "2025-07-29T14:46:19.400024",
      "source_url": "https://codeforces.com/contest/2013/problem/F1",
      "acquisition_method": "api",
      "contest_id": 2013,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2003_E2",
    "source": "codeforces",
    "title": "Turtle and Inversions (Hard Version)",
    "description": "Turtle and Inversions (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400295",
      "last_updated": "2025-07-29T14:46:19.400296",
      "source_url": "https://codeforces.com/contest/2003/problem/E2",
      "acquisition_method": "api",
      "contest_id": 2003,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2002_D2",
    "source": "codeforces",
    "title": "DFS Checker (Hard Version)",
    "description": "DFS Checker (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "hashing",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400378",
      "last_updated": "2025-07-29T14:46:19.400379",
      "source_url": "https://codeforces.com/contest/2002/problem/D2",
      "acquisition_method": "api",
      "contest_id": 2002,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1990_F",
    "source": "codeforces",
    "title": "Polygonal Segments",
    "description": "Polygonal Segments",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400830",
      "last_updated": "2025-07-29T14:46:19.400832",
      "source_url": "https://codeforces.com/contest/1990/problem/F",
      "acquisition_method": "api",
      "contest_id": 1990,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1982_C",
    "source": "codeforces",
    "title": "Boring Day",
    "description": "Boring Day",
    "difficulty": {
      "level": "easy",
      "rating": 1200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1200,
      "standardized_level": "easy"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401132",
      "last_updated": "2025-07-29T14:46:19.401134",
      "source_url": "https://codeforces.com/contest/1982/problem/C",
      "acquisition_method": "api",
      "contest_id": 1982,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1980_G",
    "source": "codeforces",
    "title": "Yasya and the Mysterious Tree",
    "description": "Yasya and the Mysterious Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401172",
      "last_updated": "2025-07-29T14:46:19.401173",
      "source_url": "https://codeforces.com/contest/1980/problem/G",
      "acquisition_method": "api",
      "contest_id": 1980,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1969_E",
    "source": "codeforces",
    "title": "Unique Array",
    "description": "Unique Array",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401542",
      "last_updated": "2025-07-29T14:46:19.401544",
      "source_url": "https://codeforces.com/contest/1969/problem/E",
      "acquisition_method": "api",
      "contest_id": 1969,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1957_F1",
    "source": "codeforces",
    "title": "Frequency Mismatch (Easy Version)",
    "description": "Frequency Mismatch (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "hashing",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401721",
      "last_updated": "2025-07-29T14:46:19.401723",
      "source_url": "https://codeforces.com/contest/1957/problem/F1",
      "acquisition_method": "api",
      "contest_id": 1957,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1927_D",
    "source": "codeforces",
    "title": "Find the Different Ones!",
    "description": "Find the Different Ones!",
    "difficulty": {
      "level": "medium",
      "rating": 1300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1300,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "dsu",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402635",
      "last_updated": "2025-07-29T14:46:19.402636",
      "source_url": "https://codeforces.com/contest/1927/problem/D",
      "acquisition_method": "api",
      "contest_id": 1927,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1914_G2",
    "source": "codeforces",
    "title": "Light Bulbs (Hard Version)",
    "description": "Light Bulbs (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "hashing"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402998",
      "last_updated": "2025-07-29T14:46:19.402999",
      "source_url": "https://codeforces.com/contest/1914/problem/G2",
      "acquisition_method": "api",
      "contest_id": 1914,
      "problem_index": "G2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1887_D",
    "source": "codeforces",
    "title": "Split",
    "description": "Split",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "math",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403786",
      "last_updated": "2025-07-29T14:46:19.403787",
      "source_url": "https://codeforces.com/contest/1887/problem/D",
      "acquisition_method": "api",
      "contest_id": 1887,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1887_C",
    "source": "codeforces",
    "title": "Minimum Array",
    "description": "Minimum Array",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "hashing",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403791",
      "last_updated": "2025-07-29T14:46:19.403793",
      "source_url": "https://codeforces.com/contest/1887/problem/C",
      "acquisition_method": "api",
      "contest_id": 1887,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1849_F",
    "source": "codeforces",
    "title": "XOR Partition",
    "description": "XOR Partition",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409719",
      "last_updated": "2025-07-29T14:46:19.409720",
      "source_url": "https://codeforces.com/contest/1849/problem/F",
      "acquisition_method": "api",
      "contest_id": 1849,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1849_E",
    "source": "codeforces",
    "title": "Max to the Right of Min",
    "description": "Max to the Right of Min",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "dsu",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409723",
      "last_updated": "2025-07-29T14:46:19.409725",
      "source_url": "https://codeforces.com/contest/1849/problem/E",
      "acquisition_method": "api",
      "contest_id": 1849,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1827_C",
    "source": "codeforces",
    "title": "Palindrome Partition",
    "description": "Palindrome Partition",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "hashing",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.410614",
      "last_updated": "2025-07-29T14:46:19.410615",
      "source_url": "https://codeforces.com/contest/1827/problem/C",
      "acquisition_method": "api",
      "contest_id": 1827,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1794_E",
    "source": "codeforces",
    "title": "Labeling the Tree with Distances",
    "description": "Labeling the Tree with Distances",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411620",
      "last_updated": "2025-07-29T14:46:19.411621",
      "source_url": "https://codeforces.com/contest/1794/problem/E",
      "acquisition_method": "api",
      "contest_id": 1794,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1793_E",
    "source": "codeforces",
    "title": "Velepin and Marketing",
    "description": "Velepin and Marketing",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411649",
      "last_updated": "2025-07-29T14:46:19.411651",
      "source_url": "https://codeforces.com/contest/1793/problem/E",
      "acquisition_method": "api",
      "contest_id": 1793,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1771_F",
    "source": "codeforces",
    "title": "Hossam and Range Minimum Query",
    "description": "Hossam and Range Minimum Query",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "hashing",
      "probabilities",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412372",
      "last_updated": "2025-07-29T14:46:19.412374",
      "source_url": "https://codeforces.com/contest/1771/problem/F",
      "acquisition_method": "api",
      "contest_id": 1771,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1766_E",
    "source": "codeforces",
    "title": "Decomposition",
    "description": "Decomposition",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412543",
      "last_updated": "2025-07-29T14:46:19.412545",
      "source_url": "https://codeforces.com/contest/1766/problem/E",
      "acquisition_method": "api",
      "contest_id": 1766,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1761_E",
    "source": "codeforces",
    "title": "Make It Connected",
    "description": "Make It Connected",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "constructive_algorithms",
      "dsu",
      "graphs",
      "greedy",
      "matrices",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412834",
      "last_updated": "2025-07-29T14:46:19.412835",
      "source_url": "https://codeforces.com/contest/1761/problem/E",
      "acquisition_method": "api",
      "contest_id": 1761,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1748_E",
    "source": "codeforces",
    "title": "Yet Another Array Counting Problem",
    "description": "Yet Another Array Counting Problem",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "flows",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413074",
      "last_updated": "2025-07-29T14:46:19.413076",
      "source_url": "https://codeforces.com/contest/1748/problem/E",
      "acquisition_method": "api",
      "contest_id": 1748,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1725_E",
    "source": "codeforces",
    "title": "Electrical Efficiency",
    "description": "Electrical Efficiency",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dp",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413786",
      "last_updated": "2025-07-29T14:46:19.413788",
      "source_url": "https://codeforces.com/contest/1725/problem/E",
      "acquisition_method": "api",
      "contest_id": 1725,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1706_E",
    "source": "codeforces",
    "title": "Qpwoeirut and Vertices",
    "description": "Qpwoeirut and Vertices",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414290",
      "last_updated": "2025-07-29T14:46:19.414292",
      "source_url": "https://codeforces.com/contest/1706/problem/E",
      "acquisition_method": "api",
      "contest_id": 1706,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1706_D2",
    "source": "codeforces",
    "title": "Chopping Carrots (Hard Version)",
    "description": "Chopping Carrots (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "dp",
      "greedy",
      "math",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414296",
      "last_updated": "2025-07-29T14:46:19.414298",
      "source_url": "https://codeforces.com/contest/1706/problem/D2",
      "acquisition_method": "api",
      "contest_id": 1706,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1699_E",
    "source": "codeforces",
    "title": "Three Days Grace",
    "description": "Three Days Grace",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "math",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414532",
      "last_updated": "2025-07-29T14:46:19.414533",
      "source_url": "https://codeforces.com/contest/1699/problem/E",
      "acquisition_method": "api",
      "contest_id": 1699,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1697_E",
    "source": "codeforces",
    "title": "Coloring",
    "description": "Coloring",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "combinatorics",
      "constructive_algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414595",
      "last_updated": "2025-07-29T14:46:19.414596",
      "source_url": "https://codeforces.com/contest/1697/problem/E",
      "acquisition_method": "api",
      "contest_id": 1697,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1654_F",
    "source": "codeforces",
    "title": "Minimal String Xoration",
    "description": "Minimal String Xoration",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "greedy",
      "hashing",
      "sortings",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415866",
      "last_updated": "2025-07-29T14:46:19.415868",
      "source_url": "https://codeforces.com/contest/1654/problem/F",
      "acquisition_method": "api",
      "contest_id": 1654,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1633_E",
    "source": "codeforces",
    "title": "Spanning Tree Queries",
    "description": "Spanning Tree Queries",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416295",
      "last_updated": "2025-07-29T14:46:19.416296",
      "source_url": "https://codeforces.com/contest/1633/problem/E",
      "acquisition_method": "api",
      "contest_id": 1633,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1625_E1",
    "source": "codeforces",
    "title": "Cats on the Upgrade (easy version)",
    "description": "Cats on the Upgrade (easy version)",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416476",
      "last_updated": "2025-07-29T14:46:19.416477",
      "source_url": "https://codeforces.com/contest/1625/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1625,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1550_F",
    "source": "codeforces",
    "title": "Jumping Around",
    "description": "Jumping Around",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "dsu",
      "graphs",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418887",
      "last_updated": "2025-07-29T14:46:19.418889",
      "source_url": "https://codeforces.com/contest/1550/problem/F",
      "acquisition_method": "api",
      "contest_id": 1550,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1497_E2",
    "source": "codeforces",
    "title": "Square-Free Division (hard version)",
    "description": "Square-Free Division (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "math",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420508",
      "last_updated": "2025-07-29T14:46:19.420509",
      "source_url": "https://codeforces.com/contest/1497/problem/E2",
      "acquisition_method": "api",
      "contest_id": 1497,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1428_F",
    "source": "codeforces",
    "title": "Fruit Sequences",
    "description": "Fruit Sequences",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422250",
      "last_updated": "2025-07-29T14:46:19.422252",
      "source_url": "https://codeforces.com/contest/1428/problem/F",
      "acquisition_method": "api",
      "contest_id": 1428,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1398_F",
    "source": "codeforces",
    "title": "Controversial Rounds",
    "description": "Controversial Rounds",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423061",
      "last_updated": "2025-07-29T14:46:19.423062",
      "source_url": "https://codeforces.com/contest/1398/problem/F",
      "acquisition_method": "api",
      "contest_id": 1398,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1367_F2",
    "source": "codeforces",
    "title": "Flying Sort (Hard Version)",
    "description": "Flying Sort (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423904",
      "last_updated": "2025-07-29T14:46:19.423906",
      "source_url": "https://codeforces.com/contest/1367/problem/F2",
      "acquisition_method": "api",
      "contest_id": 1367,
      "problem_index": "F2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1292_D",
    "source": "codeforces",
    "title": "Chaotic V.",
    "description": "Chaotic V.",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427026",
      "last_updated": "2025-07-29T14:46:19.427027",
      "source_url": "https://codeforces.com/contest/1292/problem/D",
      "acquisition_method": "api",
      "contest_id": 1292,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1285_E",
    "source": "codeforces",
    "title": "Delete a Segment",
    "description": "Delete a Segment",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "dp",
      "graphs",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427169",
      "last_updated": "2025-07-29T14:46:19.427171",
      "source_url": "https://codeforces.com/contest/1285/problem/E",
      "acquisition_method": "api",
      "contest_id": 1285,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1129_C",
    "source": "codeforces",
    "title": "Morse Code",
    "description": "Morse Code",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "hashing",
      "sortings",
      "string_suffix_structures",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432254",
      "last_updated": "2025-07-29T14:46:19.432255",
      "source_url": "https://codeforces.com/contest/1129/problem/C",
      "acquisition_method": "api",
      "contest_id": 1129,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1059_E",
    "source": "codeforces",
    "title": "Split the Tree",
    "description": "Split the Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.433949",
      "last_updated": "2025-07-29T14:46:19.433950",
      "source_url": "https://codeforces.com/contest/1059/problem/E",
      "acquisition_method": "api",
      "contest_id": 1059,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1051_E",
    "source": "codeforces",
    "title": "Vasya and Big Integers",
    "description": "Vasya and Big Integers",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "hashing",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.434114",
      "last_updated": "2025-07-29T14:46:19.434115",
      "source_url": "https://codeforces.com/contest/1051/problem/E",
      "acquisition_method": "api",
      "contest_id": 1051,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1004_E",
    "source": "codeforces",
    "title": "Sonya and Ice Cream",
    "description": "Sonya and Ice Cream",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435177",
      "last_updated": "2025-07-29T14:46:19.435178",
      "source_url": "https://codeforces.com/contest/1004/problem/E",
      "acquisition_method": "api",
      "contest_id": 1004,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_776_F",
    "source": "codeforces",
    "title": "Sherlock's bet to Moriarty",
    "description": "Sherlock's bet to Moriarty",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "divide_and_conquer",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.440403",
      "last_updated": "2025-07-29T14:46:19.440404",
      "source_url": "https://codeforces.com/contest/776/problem/F",
      "acquisition_method": "api",
      "contest_id": 776,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_708_C",
    "source": "codeforces",
    "title": "Centroids",
    "description": "Centroids",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.442032",
      "last_updated": "2025-07-29T14:46:19.442033",
      "source_url": "https://codeforces.com/contest/708/problem/C",
      "acquisition_method": "api",
      "contest_id": 708,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_627_D",
    "source": "codeforces",
    "title": "Preorder Test",
    "description": "Preorder Test",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.443709",
      "last_updated": "2025-07-29T14:46:19.443710",
      "source_url": "https://codeforces.com/contest/627/problem/D",
      "acquisition_method": "api",
      "contest_id": 627,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_557_E",
    "source": "codeforces",
    "title": "Ann and Half-Palindrome",
    "description": "Ann and Half-Palindrome",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "graphs",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.445127",
      "last_updated": "2025-07-29T14:46:19.445128",
      "source_url": "https://codeforces.com/contest/557/problem/E",
      "acquisition_method": "api",
      "contest_id": 557,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_414_D",
    "source": "codeforces",
    "title": "Mashmokh and Water Tanks",
    "description": "Mashmokh and Water Tanks",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.448870",
      "last_updated": "2025-07-29T14:46:19.448871",
      "source_url": "https://codeforces.com/contest/414/problem/D",
      "acquisition_method": "api",
      "contest_id": 414,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_30_E",
    "source": "codeforces",
    "title": "Tricky and Clever Password",
    "description": "Tricky and Clever Password",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "hashing",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.458122",
      "last_updated": "2025-07-29T14:46:19.458123",
      "source_url": "https://codeforces.com/contest/30/problem/E",
      "acquisition_method": "api",
      "contest_id": 30,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2053_I2",
    "source": "codeforces",
    "title": "Affectionate Arrays (Hard Version)",
    "description": "Affectionate Arrays (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "graphs",
      "greedy",
      "math",
      "shortest_paths",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398678",
      "last_updated": "2025-07-29T14:46:19.398679",
      "source_url": "https://codeforces.com/contest/2053/problem/I2",
      "acquisition_method": "api",
      "contest_id": 2053,
      "problem_index": "I2",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_2053_G",
    "source": "codeforces",
    "title": "Naive String Splits",
    "description": "Naive String Splits",
    "difficulty": {
      "level": "hard",
      "rating": 3400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "greedy",
      "hashing",
      "math",
      "number_theory",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398691",
      "last_updated": "2025-07-29T14:46:19.398692",
      "source_url": "https://codeforces.com/contest/2053/problem/G",
      "acquisition_method": "api",
      "contest_id": 2053,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_2042_E",
    "source": "codeforces",
    "title": "Vertex Pairs",
    "description": "Vertex Pairs",
    "difficulty": {
      "level": "hard",
      "rating": 2900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2900,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399093",
      "last_updated": "2025-07-29T14:46:19.399094",
      "source_url": "https://codeforces.com/contest/2042/problem/E",
      "acquisition_method": "api",
      "contest_id": 2042,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_1994_H",
    "source": "codeforces",
    "title": "Fortnite",
    "description": "Fortnite",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "constructive_algorithms",
      "games",
      "greedy",
      "hashing",
      "interactive",
      "math",
      "number_theory",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400620",
      "last_updated": "2025-07-29T14:46:19.400621",
      "source_url": "https://codeforces.com/contest/1994/problem/H",
      "acquisition_method": "api",
      "contest_id": 1994,
      "problem_index": "H",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_1920_F2",
    "source": "codeforces",
    "title": "Smooth Sailing (Hard Version)",
    "description": "Smooth Sailing (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dsu",
      "geometry",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402805",
      "last_updated": "2025-07-29T14:46:19.402806",
      "source_url": "https://codeforces.com/contest/1920/problem/F2",
      "acquisition_method": "api",
      "contest_id": 1920,
      "problem_index": "F2",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_1608_G",
    "source": "codeforces",
    "title": "Alphabetic Tree",
    "description": "Alphabetic Tree",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "hashing",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417224",
      "last_updated": "2025-07-29T14:46:19.417225",
      "source_url": "https://codeforces.com/contest/1608/problem/G",
      "acquisition_method": "api",
      "contest_id": 1608,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_1175_G",
    "source": "codeforces",
    "title": "Yet Another Partiton Problem",
    "description": "Yet Another Partiton Problem",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dp",
      "geometry",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431076",
      "last_updated": "2025-07-29T14:46:19.431077",
      "source_url": "https://codeforces.com/contest/1175/problem/G",
      "acquisition_method": "api",
      "contest_id": 1175,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_2128_E1",
    "source": "codeforces",
    "title": "Submedians (Easy Version)",
    "description": "Submedians (Easy Version)",
    "difficulty": {
      "level": "unrated",
      "rating": null,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396584",
      "last_updated": "2025-07-29T14:46:19.396586",
      "source_url": "https://codeforces.com/contest/2128/problem/E1",
      "acquisition_method": "api",
      "contest_id": 2128,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2126_G1",
    "source": "codeforces",
    "title": "Big Wins! (easy version)",
    "description": "Big Wins! (easy version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "dsu",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396616",
      "last_updated": "2025-07-29T14:46:19.396618",
      "source_url": "https://codeforces.com/contest/2126/problem/G1",
      "acquisition_method": "api",
      "contest_id": 2126,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2123_E",
    "source": "codeforces",
    "title": "MEX Count",
    "description": "MEX Count",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396725",
      "last_updated": "2025-07-29T14:46:19.396727",
      "source_url": "https://codeforces.com/contest/2123/problem/E",
      "acquisition_method": "api",
      "contest_id": 2123,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2121_F",
    "source": "codeforces",
    "title": "Yamakasi",
    "description": "Yamakasi",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396789",
      "last_updated": "2025-07-29T14:46:19.396791",
      "source_url": "https://codeforces.com/contest/2121/problem/F",
      "acquisition_method": "api",
      "contest_id": 2121,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2115_B",
    "source": "codeforces",
    "title": "Gellyfish and Camellia Japonica",
    "description": "Gellyfish and Camellia Japonica",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396977",
      "last_updated": "2025-07-29T14:46:19.396978",
      "source_url": "https://codeforces.com/contest/2115/problem/B",
      "acquisition_method": "api",
      "contest_id": 2115,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2111_E",
    "source": "codeforces",
    "title": "Changing the String",
    "description": "Changing the String",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397077",
      "last_updated": "2025-07-29T14:46:19.397079",
      "source_url": "https://codeforces.com/contest/2111/problem/E",
      "acquisition_method": "api",
      "contest_id": 2111,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2106_G1",
    "source": "codeforces",
    "title": "Baudelaire (easy version)",
    "description": "Baudelaire (easy version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "divide_and_conquer",
      "greedy",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397227",
      "last_updated": "2025-07-29T14:46:19.397229",
      "source_url": "https://codeforces.com/contest/2106/problem/G1",
      "acquisition_method": "api",
      "contest_id": 2106,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2106_D",
    "source": "codeforces",
    "title": "Flower Boy",
    "description": "Flower Boy",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397240",
      "last_updated": "2025-07-29T14:46:19.397242",
      "source_url": "https://codeforces.com/contest/2106/problem/D",
      "acquisition_method": "api",
      "contest_id": 2106,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2104_E",
    "source": "codeforces",
    "title": "Unpleasant Strings",
    "description": "Unpleasant Strings",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397267",
      "last_updated": "2025-07-29T14:46:19.397269",
      "source_url": "https://codeforces.com/contest/2104/problem/E",
      "acquisition_method": "api",
      "contest_id": 2104,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2101_C",
    "source": "codeforces",
    "title": "23 Kingdom",
    "description": "23 Kingdom",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "greedy",
      "ternary_search",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397336",
      "last_updated": "2025-07-29T14:46:19.397337",
      "source_url": "https://codeforces.com/contest/2101/problem/C",
      "acquisition_method": "api",
      "contest_id": 2101,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2089_B1",
    "source": "codeforces",
    "title": "Canteen (Easy Version)",
    "description": "Canteen (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "flows",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397625",
      "last_updated": "2025-07-29T14:46:19.397627",
      "source_url": "https://codeforces.com/contest/2089/problem/B1",
      "acquisition_method": "api",
      "contest_id": 2089,
      "problem_index": "B1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2072_G",
    "source": "codeforces",
    "title": "I've Been Flipping Numbers for 300 Years and Calculated the Sum",
    "description": "I've Been Flipping Numbers for 300 Years and Calculated the Sum",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "combinatorics",
      "divide_and_conquer",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398051",
      "last_updated": "2025-07-29T14:46:19.398052",
      "source_url": "https://codeforces.com/contest/2072/problem/G",
      "acquisition_method": "api",
      "contest_id": 2072,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2072_E",
    "source": "codeforces",
    "title": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?",
    "description": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "constructive_algorithms",
      "dp",
      "geometry",
      "greedy",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398060",
      "last_updated": "2025-07-29T14:46:19.398062",
      "source_url": "https://codeforces.com/contest/2072/problem/E",
      "acquisition_method": "api",
      "contest_id": 2072,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2071_C",
    "source": "codeforces",
    "title": "Trapmigiano Reggiano",
    "description": "Trapmigiano Reggiano",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398100",
      "last_updated": "2025-07-29T14:46:19.398101",
      "source_url": "https://codeforces.com/contest/2071/problem/C",
      "acquisition_method": "api",
      "contest_id": 2071,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2069_C",
    "source": "codeforces",
    "title": "Beautiful Sequence",
    "description": "Beautiful Sequence",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398153",
      "last_updated": "2025-07-29T14:46:19.398155",
      "source_url": "https://codeforces.com/contest/2069/problem/C",
      "acquisition_method": "api",
      "contest_id": 2069,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2065_H",
    "source": "codeforces",
    "title": "Bro Thinks He's Him",
    "description": "Bro Thinks He's Him",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "math",
      "matrices"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398286",
      "last_updated": "2025-07-29T14:46:19.398288",
      "source_url": "https://codeforces.com/contest/2065/problem/H",
      "acquisition_method": "api",
      "contest_id": 2065,
      "problem_index": "H",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2065_F",
    "source": "codeforces",
    "title": "Skibidus and Slay",
    "description": "Skibidus and Slay",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398295",
      "last_updated": "2025-07-29T14:46:19.398297",
      "source_url": "https://codeforces.com/contest/2065/problem/F",
      "acquisition_method": "api",
      "contest_id": 2065,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2062_E1",
    "source": "codeforces",
    "title": "The Game (Easy Version)",
    "description": "The Game (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "games",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398452",
      "last_updated": "2025-07-29T14:46:19.398453",
      "source_url": "https://codeforces.com/contest/2062/problem/E1",
      "acquisition_method": "api",
      "contest_id": 2062,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2062_D",
    "source": "codeforces",
    "title": "Balanced Tree",
    "description": "Balanced Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398456",
      "last_updated": "2025-07-29T14:46:19.398457",
      "source_url": "https://codeforces.com/contest/2062/problem/D",
      "acquisition_method": "api",
      "contest_id": 2062,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2053_E",
    "source": "codeforces",
    "title": "Resourceful Caterpillar Sequence",
    "description": "Resourceful Caterpillar Sequence",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "games",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398699",
      "last_updated": "2025-07-29T14:46:19.398701",
      "source_url": "https://codeforces.com/contest/2053/problem/E",
      "acquisition_method": "api",
      "contest_id": 2053,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2048_D",
    "source": "codeforces",
    "title": "Kevin and Competition Memories",
    "description": "Kevin and Competition Memories",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398896",
      "last_updated": "2025-07-29T14:46:19.398898",
      "source_url": "https://codeforces.com/contest/2048/problem/D",
      "acquisition_method": "api",
      "contest_id": 2048,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2046_C",
    "source": "codeforces",
    "title": "Adventurers",
    "description": "Adventurers",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "sortings",
      "ternary_search",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398945",
      "last_updated": "2025-07-29T14:46:19.398947",
      "source_url": "https://codeforces.com/contest/2046/problem/C",
      "acquisition_method": "api",
      "contest_id": 2046,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2043_C",
    "source": "codeforces",
    "title": "Sums on Segments",
    "description": "Sums on Segments",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399075",
      "last_updated": "2025-07-29T14:46:19.399076",
      "source_url": "https://codeforces.com/contest/2043/problem/C",
      "acquisition_method": "api",
      "contest_id": 2043,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2041_M",
    "source": "codeforces",
    "title": "Selection Sort",
    "description": "Selection Sort",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399118",
      "last_updated": "2025-07-29T14:46:19.399119",
      "source_url": "https://codeforces.com/contest/2041/problem/M",
      "acquisition_method": "api",
      "contest_id": 2041,
      "problem_index": "M",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2040_D",
    "source": "codeforces",
    "title": "Non Prime Tree",
    "description": "Non Prime Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "dfs_and_similar",
      "greedy",
      "number_theory",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399191",
      "last_updated": "2025-07-29T14:46:19.399192",
      "source_url": "https://codeforces.com/contest/2040/problem/D",
      "acquisition_method": "api",
      "contest_id": 2040,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2037_G",
    "source": "codeforces",
    "title": "Natlan Exploring",
    "description": "Natlan Exploring",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "combinatorics",
      "data_structures",
      "dp",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399376",
      "last_updated": "2025-07-29T14:46:19.399378",
      "source_url": "https://codeforces.com/contest/2037/problem/G",
      "acquisition_method": "api",
      "contest_id": 2037,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2035_D",
    "source": "codeforces",
    "title": "Yet Another Real Number Problem",
    "description": "Yet Another Real Number Problem",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "greedy",
      "implementation",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399465",
      "last_updated": "2025-07-29T14:46:19.399466",
      "source_url": "https://codeforces.com/contest/2035/problem/D",
      "acquisition_method": "api",
      "contest_id": 2035,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2033_G",
    "source": "codeforces",
    "title": "Sakurako and Chefir",
    "description": "Sakurako and Chefir",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399525",
      "last_updated": "2025-07-29T14:46:19.399526",
      "source_url": "https://codeforces.com/contest/2033/problem/G",
      "acquisition_method": "api",
      "contest_id": 2033,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2031_E",
    "source": "codeforces",
    "title": "Penchick and Chloe's Trees",
    "description": "Penchick and Chloe's Trees",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399586",
      "last_updated": "2025-07-29T14:46:19.399587",
      "source_url": "https://codeforces.com/contest/2031/problem/E",
      "acquisition_method": "api",
      "contest_id": 2031,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2030_E",
    "source": "codeforces",
    "title": "MEXimize the Score",
    "description": "MEXimize the Score",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399621",
      "last_updated": "2025-07-29T14:46:19.399622",
      "source_url": "https://codeforces.com/contest/2030/problem/E",
      "acquisition_method": "api",
      "contest_id": 2030,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2029_D",
    "source": "codeforces",
    "title": "Cool Graph",
    "description": "Cool Graph",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399663",
      "last_updated": "2025-07-29T14:46:19.399665",
      "source_url": "https://codeforces.com/contest/2029/problem/D",
      "acquisition_method": "api",
      "contest_id": 2029,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2029_C",
    "source": "codeforces",
    "title": "New Rating",
    "description": "New Rating",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399668",
      "last_updated": "2025-07-29T14:46:19.399669",
      "source_url": "https://codeforces.com/contest/2029/problem/C",
      "acquisition_method": "api",
      "contest_id": 2029,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2028_D",
    "source": "codeforces",
    "title": "Alice's Adventures in Cards",
    "description": "Alice's Adventures in Cards",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "ternary_search"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399690",
      "last_updated": "2025-07-29T14:46:19.399691",
      "source_url": "https://codeforces.com/contest/2028/problem/D",
      "acquisition_method": "api",
      "contest_id": 2028,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2028_C",
    "source": "codeforces",
    "title": "Alice's Adventures in Cutting Cake",
    "description": "Alice's Adventures in Cutting Cake",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399699",
      "last_updated": "2025-07-29T14:46:19.399701",
      "source_url": "https://codeforces.com/contest/2028/problem/C",
      "acquisition_method": "api",
      "contest_id": 2028,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2027_C",
    "source": "codeforces",
    "title": "Add Zeros",
    "description": "Add Zeros",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399731",
      "last_updated": "2025-07-29T14:46:19.399733",
      "source_url": "https://codeforces.com/contest/2027/problem/C",
      "acquisition_method": "api",
      "contest_id": 2027,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2014_H",
    "source": "codeforces",
    "title": "Robin Hood Archery",
    "description": "Robin Hood Archery",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "greedy",
      "hashing"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399983",
      "last_updated": "2025-07-29T14:46:19.399985",
      "source_url": "https://codeforces.com/contest/2014/problem/H",
      "acquisition_method": "api",
      "contest_id": 2014,
      "problem_index": "H",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2008_E",
    "source": "codeforces",
    "title": "Alternating String",
    "description": "Alternating String",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400155",
      "last_updated": "2025-07-29T14:46:19.400156",
      "source_url": "https://codeforces.com/contest/2008/problem/E",
      "acquisition_method": "api",
      "contest_id": 2008,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2004_D",
    "source": "codeforces",
    "title": "Colored Portals",
    "description": "Colored Portals",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400273",
      "last_updated": "2025-07-29T14:46:19.400274",
      "source_url": "https://codeforces.com/contest/2004/problem/D",
      "acquisition_method": "api",
      "contest_id": 2004,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2002_D1",
    "source": "codeforces",
    "title": "DFS Checker (Easy Version)",
    "description": "DFS Checker (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "hashing",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400383",
      "last_updated": "2025-07-29T14:46:19.400384",
      "source_url": "https://codeforces.com/contest/2002/problem/D1",
      "acquisition_method": "api",
      "contest_id": 2002,
      "problem_index": "D1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2001_C",
    "source": "codeforces",
    "title": "Guess The Tree",
    "description": "Guess The Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "greedy",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400414",
      "last_updated": "2025-07-29T14:46:19.400415",
      "source_url": "https://codeforces.com/contest/2001/problem/C",
      "acquisition_method": "api",
      "contest_id": 2001,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1998_E1",
    "source": "codeforces",
    "title": "Eliminating Balls With Merging (Easy Version)",
    "description": "Eliminating Balls With Merging (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400499",
      "last_updated": "2025-07-29T14:46:19.400501",
      "source_url": "https://codeforces.com/contest/1998/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1998,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1998_D",
    "source": "codeforces",
    "title": "Determine Winning Islands in Race",
    "description": "Determine Winning Islands in Race",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "graphs",
      "greedy",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400504",
      "last_updated": "2025-07-29T14:46:19.400505",
      "source_url": "https://codeforces.com/contest/1998/problem/D",
      "acquisition_method": "api",
      "contest_id": 1998,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1997_D",
    "source": "codeforces",
    "title": "Maximize the Root",
    "description": "Maximize the Root",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400532",
      "last_updated": "2025-07-29T14:46:19.400533",
      "source_url": "https://codeforces.com/contest/1997/problem/D",
      "acquisition_method": "api",
      "contest_id": 1997,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1996_G",
    "source": "codeforces",
    "title": "Penacony",
    "description": "Penacony",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "graphs",
      "greedy",
      "hashing"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400549",
      "last_updated": "2025-07-29T14:46:19.400551",
      "source_url": "https://codeforces.com/contest/1996/problem/G",
      "acquisition_method": "api",
      "contest_id": 1996,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1995_B2",
    "source": "codeforces",
    "title": "Bouquet (Hard Version)",
    "description": "Bouquet (Hard Version)",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "math",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400606",
      "last_updated": "2025-07-29T14:46:19.400607",
      "source_url": "https://codeforces.com/contest/1995/problem/B2",
      "acquisition_method": "api",
      "contest_id": 1995,
      "problem_index": "B2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1994_D",
    "source": "codeforces",
    "title": "Funny Game",
    "description": "Funny Game",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400639",
      "last_updated": "2025-07-29T14:46:19.400640",
      "source_url": "https://codeforces.com/contest/1994/problem/D",
      "acquisition_method": "api",
      "contest_id": 1994,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1992_F",
    "source": "codeforces",
    "title": "Valuable Cards",
    "description": "Valuable Cards",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "dp",
      "greedy",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400754",
      "last_updated": "2025-07-29T14:46:19.400756",
      "source_url": "https://codeforces.com/contest/1992/problem/F",
      "acquisition_method": "api",
      "contest_id": 1992,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1989_D",
    "source": "codeforces",
    "title": "Smithing Skill",
    "description": "Smithing Skill",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400881",
      "last_updated": "2025-07-29T14:46:19.400882",
      "source_url": "https://codeforces.com/contest/1989/problem/D",
      "acquisition_method": "api",
      "contest_id": 1989,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1986_G1",
    "source": "codeforces",
    "title": "Permutation Problem (Simple Version)",
    "description": "Permutation Problem (Simple Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "combinatorics",
      "data_structures",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400971",
      "last_updated": "2025-07-29T14:46:19.400973",
      "source_url": "https://codeforces.com/contest/1986/problem/G1",
      "acquisition_method": "api",
      "contest_id": 1986,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1979_D",
    "source": "codeforces",
    "title": "Fixing a Binary String",
    "description": "Fixing a Binary String",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "constructive_algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401217",
      "last_updated": "2025-07-29T14:46:19.401218",
      "source_url": "https://codeforces.com/contest/1979/problem/D",
      "acquisition_method": "api",
      "contest_id": 1979,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1977_C",
    "source": "codeforces",
    "title": "Nikita and LCM",
    "description": "Nikita and LCM",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "math",
      "number_theory",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401270",
      "last_updated": "2025-07-29T14:46:19.401271",
      "source_url": "https://codeforces.com/contest/1977/problem/C",
      "acquisition_method": "api",
      "contest_id": 1977,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1976_C",
    "source": "codeforces",
    "title": "Job Interview",
    "description": "Job Interview",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401296",
      "last_updated": "2025-07-29T14:46:19.401297",
      "source_url": "https://codeforces.com/contest/1976/problem/C",
      "acquisition_method": "api",
      "contest_id": 1976,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1954_E",
    "source": "codeforces",
    "title": "Chain Reaction",
    "description": "Chain Reaction",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dsu",
      "greedy",
      "implementation",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401818",
      "last_updated": "2025-07-29T14:46:19.401819",
      "source_url": "https://codeforces.com/contest/1954/problem/E",
      "acquisition_method": "api",
      "contest_id": 1954,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1951_E",
    "source": "codeforces",
    "title": "No Palindromes",
    "description": "No Palindromes",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "divide_and_conquer",
      "greedy",
      "hashing",
      "implementation",
      "math",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401902",
      "last_updated": "2025-07-29T14:46:19.401904",
      "source_url": "https://codeforces.com/contest/1951/problem/E",
      "acquisition_method": "api",
      "contest_id": 1951,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1950_G",
    "source": "codeforces",
    "title": "Shuffling Songs",
    "description": "Shuffling Songs",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "dfs_and_similar",
      "dp",
      "graphs",
      "hashing",
      "implementation",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401924",
      "last_updated": "2025-07-29T14:46:19.401925",
      "source_url": "https://codeforces.com/contest/1950/problem/G",
      "acquisition_method": "api",
      "contest_id": 1950,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1946_C",
    "source": "codeforces",
    "title": "Tree Cutting",
    "description": "Tree Cutting",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402097",
      "last_updated": "2025-07-29T14:46:19.402099",
      "source_url": "https://codeforces.com/contest/1946/problem/C",
      "acquisition_method": "api",
      "contest_id": 1946,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1942_D",
    "source": "codeforces",
    "title": "Learning to Paint",
    "description": "Learning to Paint",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402205",
      "last_updated": "2025-07-29T14:46:19.402206",
      "source_url": "https://codeforces.com/contest/1942/problem/D",
      "acquisition_method": "api",
      "contest_id": 1942,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1941_E",
    "source": "codeforces",
    "title": "Rudolf and k Bridges",
    "description": "Rudolf and k Bridges",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402235",
      "last_updated": "2025-07-29T14:46:19.402236",
      "source_url": "https://codeforces.com/contest/1941/problem/E",
      "acquisition_method": "api",
      "contest_id": 1941,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1940_C",
    "source": "codeforces",
    "title": "Burenka and Pether",
    "description": "Burenka and Pether",
    "difficulty": {
      "level": "unrated",
      "rating": null,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "*special",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402265",
      "last_updated": "2025-07-29T14:46:19.402267",
      "source_url": "https://codeforces.com/contest/1940/problem/C",
      "acquisition_method": "api",
      "contest_id": 1940,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1935_C",
    "source": "codeforces",
    "title": "Messenger in MAC",
    "description": "Messenger in MAC",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "dp",
      "greedy",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402394",
      "last_updated": "2025-07-29T14:46:19.402395",
      "source_url": "https://codeforces.com/contest/1935/problem/C",
      "acquisition_method": "api",
      "contest_id": 1935,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1930_D2",
    "source": "codeforces",
    "title": "Sum over all Substrings (Hard Version)",
    "description": "Sum over all Substrings (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "divide_and_conquer",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402548",
      "last_updated": "2025-07-29T14:46:19.402549",
      "source_url": "https://codeforces.com/contest/1930/problem/D2",
      "acquisition_method": "api",
      "contest_id": 1930,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1927_F",
    "source": "codeforces",
    "title": "Microcycle",
    "description": "Microcycle",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402626",
      "last_updated": "2025-07-29T14:46:19.402628",
      "source_url": "https://codeforces.com/contest/1927/problem/F",
      "acquisition_method": "api",
      "contest_id": 1927,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1926_G",
    "source": "codeforces",
    "title": "Vlad and Trouble at MIT",
    "description": "Vlad and Trouble at MIT",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "flows",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402652",
      "last_updated": "2025-07-29T14:46:19.402653",
      "source_url": "https://codeforces.com/contest/1926/problem/G",
      "acquisition_method": "api",
      "contest_id": 1926,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1926_E",
    "source": "codeforces",
    "title": "Vlad and an Odd Ordering",
    "description": "Vlad and an Odd Ordering",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "dp",
      "implementation",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402661",
      "last_updated": "2025-07-29T14:46:19.402662",
      "source_url": "https://codeforces.com/contest/1926/problem/E",
      "acquisition_method": "api",
      "contest_id": 1926,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1923_E",
    "source": "codeforces",
    "title": "Count Paths",
    "description": "Count Paths",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402724",
      "last_updated": "2025-07-29T14:46:19.402725",
      "source_url": "https://codeforces.com/contest/1923/problem/E",
      "acquisition_method": "api",
      "contest_id": 1923,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1923_D",
    "source": "codeforces",
    "title": "Slimes",
    "description": "Slimes",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402728",
      "last_updated": "2025-07-29T14:46:19.402730",
      "source_url": "https://codeforces.com/contest/1923/problem/D",
      "acquisition_method": "api",
      "contest_id": 1923,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1918_D",
    "source": "codeforces",
    "title": "Blocking Elements",
    "description": "Blocking Elements",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402886",
      "last_updated": "2025-07-29T14:46:19.402888",
      "source_url": "https://codeforces.com/contest/1918/problem/D",
      "acquisition_method": "api",
      "contest_id": 1918,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1914_G1",
    "source": "codeforces",
    "title": "Light Bulbs (Easy Version)",
    "description": "Light Bulbs (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403002",
      "last_updated": "2025-07-29T14:46:19.403004",
      "source_url": "https://codeforces.com/contest/1914/problem/G1",
      "acquisition_method": "api",
      "contest_id": 1914,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1913_D",
    "source": "codeforces",
    "title": "Array Collapse",
    "description": "Array Collapse",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403045",
      "last_updated": "2025-07-29T14:46:19.403047",
      "source_url": "https://codeforces.com/contest/1913/problem/D",
      "acquisition_method": "api",
      "contest_id": 1913,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1901_E",
    "source": "codeforces",
    "title": "Compressed Tree",
    "description": "Compressed Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403477",
      "last_updated": "2025-07-29T14:46:19.403479",
      "source_url": "https://codeforces.com/contest/1901/problem/E",
      "acquisition_method": "api",
      "contest_id": 1901,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1898_E",
    "source": "codeforces",
    "title": "Sofia and Strings",
    "description": "Sofia and Strings",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "greedy",
      "sortings",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403567",
      "last_updated": "2025-07-29T14:46:19.403569",
      "source_url": "https://codeforces.com/contest/1898/problem/E",
      "acquisition_method": "api",
      "contest_id": 1898,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1896_D",
    "source": "codeforces",
    "title": "Ones and Twos",
    "description": "Ones and Twos",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403614",
      "last_updated": "2025-07-29T14:46:19.403615",
      "source_url": "https://codeforces.com/contest/1896/problem/D",
      "acquisition_method": "api",
      "contest_id": 1896,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1866_G",
    "source": "codeforces",
    "title": "Grouped Carriages",
    "description": "Grouped Carriages",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "flows",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404342",
      "last_updated": "2025-07-29T14:46:19.404343",
      "source_url": "https://codeforces.com/contest/1866/problem/G",
      "acquisition_method": "api",
      "contest_id": 1866,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1863_E",
    "source": "codeforces",
    "title": "Speedrun",
    "description": "Speedrun",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404437",
      "last_updated": "2025-07-29T14:46:19.404439",
      "source_url": "https://codeforces.com/contest/1863/problem/E",
      "acquisition_method": "api",
      "contest_id": 1863,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1859_D",
    "source": "codeforces",
    "title": "Andrey and Escape from Capygrad",
    "description": "Andrey and Escape from Capygrad",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404569",
      "last_updated": "2025-07-29T14:46:19.404570",
      "source_url": "https://codeforces.com/contest/1859/problem/D",
      "acquisition_method": "api",
      "contest_id": 1859,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1858_D",
    "source": "codeforces",
    "title": "Trees and Segments",
    "description": "Trees and Segments",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404599",
      "last_updated": "2025-07-29T14:46:19.404600",
      "source_url": "https://codeforces.com/contest/1858/problem/D",
      "acquisition_method": "api",
      "contest_id": 1858,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1849_C",
    "source": "codeforces",
    "title": "Binary String Copying",
    "description": "Binary String Copying",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "hashing",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409733",
      "last_updated": "2025-07-29T14:46:19.409735",
      "source_url": "https://codeforces.com/contest/1849/problem/C",
      "acquisition_method": "api",
      "contest_id": 1849,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1845_C",
    "source": "codeforces",
    "title": "Strong Password",
    "description": "Strong Password",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409860",
      "last_updated": "2025-07-29T14:46:19.409862",
      "source_url": "https://codeforces.com/contest/1845/problem/C",
      "acquisition_method": "api",
      "contest_id": 1845,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1805_D",
    "source": "codeforces",
    "title": "A Wide, Wide Graph",
    "description": "A Wide, Wide Graph",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411245",
      "last_updated": "2025-07-29T14:46:19.411246",
      "source_url": "https://codeforces.com/contest/1805/problem/D",
      "acquisition_method": "api",
      "contest_id": 1805,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1801_C",
    "source": "codeforces",
    "title": "Music Festival",
    "description": "Music Festival",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411399",
      "last_updated": "2025-07-29T14:46:19.411400",
      "source_url": "https://codeforces.com/contest/1801/problem/C",
      "acquisition_method": "api",
      "contest_id": 1801,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1796_D",
    "source": "codeforces",
    "title": "Maximum Subarray",
    "description": "Maximum Subarray",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411567",
      "last_updated": "2025-07-29T14:46:19.411568",
      "source_url": "https://codeforces.com/contest/1796/problem/D",
      "acquisition_method": "api",
      "contest_id": 1796,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1795_E",
    "source": "codeforces",
    "title": "Explosions?",
    "description": "Explosions?",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411597",
      "last_updated": "2025-07-29T14:46:19.411598",
      "source_url": "https://codeforces.com/contest/1795/problem/E",
      "acquisition_method": "api",
      "contest_id": 1795,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1794_D",
    "source": "codeforces",
    "title": "Counting Factorizations",
    "description": "Counting Factorizations",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "combinatorics",
      "divide_and_conquer",
      "dp",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411624",
      "last_updated": "2025-07-29T14:46:19.411626",
      "source_url": "https://codeforces.com/contest/1794/problem/D",
      "acquisition_method": "api",
      "contest_id": 1794,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1793_D",
    "source": "codeforces",
    "title": "Moscow Gorillas",
    "description": "Moscow Gorillas",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411654",
      "last_updated": "2025-07-29T14:46:19.411655",
      "source_url": "https://codeforces.com/contest/1793/problem/D",
      "acquisition_method": "api",
      "contest_id": 1793,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1790_F",
    "source": "codeforces",
    "title": "Timofey and Black-White Tree",
    "description": "Timofey and Black-White Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "dfs_and_similar",
      "divide_and_conquer",
      "graphs",
      "greedy",
      "math",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411751",
      "last_updated": "2025-07-29T14:46:19.411752",
      "source_url": "https://codeforces.com/contest/1790/problem/F",
      "acquisition_method": "api",
      "contest_id": 1790,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1773_B",
    "source": "codeforces",
    "title": "BinCoin",
    "description": "BinCoin",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "divide_and_conquer",
      "hashing",
      "implementation",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412326",
      "last_updated": "2025-07-29T14:46:19.412327",
      "source_url": "https://codeforces.com/contest/1773/problem/B",
      "acquisition_method": "api",
      "contest_id": 1773,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1771_D",
    "source": "codeforces",
    "title": "Hossam and (sub-)palindromic tree",
    "description": "Hossam and (sub-)palindromic tree",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412383",
      "last_updated": "2025-07-29T14:46:19.412384",
      "source_url": "https://codeforces.com/contest/1771/problem/D",
      "acquisition_method": "api",
      "contest_id": 1771,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1759_F",
    "source": "codeforces",
    "title": "All Possible Digits",
    "description": "All Possible Digits",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412901",
      "last_updated": "2025-07-29T14:46:19.412903",
      "source_url": "https://codeforces.com/contest/1759/problem/F",
      "acquisition_method": "api",
      "contest_id": 1759,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1740_E",
    "source": "codeforces",
    "title": "Hanging Hearts",
    "description": "Hanging Hearts",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413324",
      "last_updated": "2025-07-29T14:46:19.413325",
      "source_url": "https://codeforces.com/contest/1740/problem/E",
      "acquisition_method": "api",
      "contest_id": 1740,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1734_D",
    "source": "codeforces",
    "title": "Slime Escape",
    "description": "Slime Escape",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413513",
      "last_updated": "2025-07-29T14:46:19.413514",
      "source_url": "https://codeforces.com/contest/1734/problem/D",
      "acquisition_method": "api",
      "contest_id": 1734,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1731_D",
    "source": "codeforces",
    "title": "Valiant's New Map",
    "description": "Valiant's New Map",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413602",
      "last_updated": "2025-07-29T14:46:19.413603",
      "source_url": "https://codeforces.com/contest/1731/problem/D",
      "acquisition_method": "api",
      "contest_id": 1731,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1725_C",
    "source": "codeforces",
    "title": "Circular Mirror",
    "description": "Circular Mirror",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "geometry",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413795",
      "last_updated": "2025-07-29T14:46:19.413796",
      "source_url": "https://codeforces.com/contest/1725/problem/C",
      "acquisition_method": "api",
      "contest_id": 1725,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1721_E",
    "source": "codeforces",
    "title": "Prefix Function Queries",
    "description": "Prefix Function Queries",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "hashing",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413841",
      "last_updated": "2025-07-29T14:46:19.413842",
      "source_url": "https://codeforces.com/contest/1721/problem/E",
      "acquisition_method": "api",
      "contest_id": 1721,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1720_D1",
    "source": "codeforces",
    "title": "Xor-Subsequence (easy version)",
    "description": "Xor-Subsequence (easy version)",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "dp",
      "strings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413872",
      "last_updated": "2025-07-29T14:46:19.413873",
      "source_url": "https://codeforces.com/contest/1720/problem/D1",
      "acquisition_method": "api",
      "contest_id": 1720,
      "problem_index": "D1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1714_D",
    "source": "codeforces",
    "title": "Color with Occurrences",
    "description": "Color with Occurrences",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414036",
      "last_updated": "2025-07-29T14:46:19.414038",
      "source_url": "https://codeforces.com/contest/1714/problem/D",
      "acquisition_method": "api",
      "contest_id": 1714,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1710_B",
    "source": "codeforces",
    "title": "Rain",
    "description": "Rain",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414146",
      "last_updated": "2025-07-29T14:46:19.414148",
      "source_url": "https://codeforces.com/contest/1710/problem/B",
      "acquisition_method": "api",
      "contest_id": 1710,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1701_D",
    "source": "codeforces",
    "title": "Permutation Restoration",
    "description": "Permutation Restoration",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "math",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414483",
      "last_updated": "2025-07-29T14:46:19.414485",
      "source_url": "https://codeforces.com/contest/1701/problem/D",
      "acquisition_method": "api",
      "contest_id": 1701,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1696_D",
    "source": "codeforces",
    "title": "Permutation Graph",
    "description": "Permutation Graph",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "divide_and_conquer",
      "greedy",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414646",
      "last_updated": "2025-07-29T14:46:19.414647",
      "source_url": "https://codeforces.com/contest/1696/problem/D",
      "acquisition_method": "api",
      "contest_id": 1696,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1695_C",
    "source": "codeforces",
    "title": "Zero Path",
    "description": "Zero Path",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "graphs",
      "greedy",
      "shortest_paths"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414679",
      "last_updated": "2025-07-29T14:46:19.414681",
      "source_url": "https://codeforces.com/contest/1695/problem/C",
      "acquisition_method": "api",
      "contest_id": 1695,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1691_D",
    "source": "codeforces",
    "title": "Max GEQ Sum",
    "description": "Max GEQ Sum",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "divide_and_conquer",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414783",
      "last_updated": "2025-07-29T14:46:19.414784",
      "source_url": "https://codeforces.com/contest/1691/problem/D",
      "acquisition_method": "api",
      "contest_id": 1691,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1684_E",
    "source": "codeforces",
    "title": "MEX vs DIFF",
    "description": "MEX vs DIFF",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414953",
      "last_updated": "2025-07-29T14:46:19.414955",
      "source_url": "https://codeforces.com/contest/1684/problem/E",
      "acquisition_method": "api",
      "contest_id": 1684,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1680_C",
    "source": "codeforces",
    "title": "Binary String",
    "description": "Binary String",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "greedy",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415049",
      "last_updated": "2025-07-29T14:46:19.415051",
      "source_url": "https://codeforces.com/contest/1680/problem/C",
      "acquisition_method": "api",
      "contest_id": 1680,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1630_B",
    "source": "codeforces",
    "title": "Range and Partition",
    "description": "Range and Partition",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416367",
      "last_updated": "2025-07-29T14:46:19.416368",
      "source_url": "https://codeforces.com/contest/1630/problem/B",
      "acquisition_method": "api",
      "contest_id": 1630,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1609_C",
    "source": "codeforces",
    "title": "Complex Market Analysis",
    "description": "Complex Market Analysis",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "implementation",
      "number_theory",
      "schedules",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417211",
      "last_updated": "2025-07-29T14:46:19.417212",
      "source_url": "https://codeforces.com/contest/1609/problem/C",
      "acquisition_method": "api",
      "contest_id": 1609,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1601_B",
    "source": "codeforces",
    "title": "Frog Traveler",
    "description": "Frog Traveler",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "shortest_paths",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417425",
      "last_updated": "2025-07-29T14:46:19.417426",
      "source_url": "https://codeforces.com/contest/1601/problem/B",
      "acquisition_method": "api",
      "contest_id": 1601,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1582_E",
    "source": "codeforces",
    "title": "Pchelyonok and Segments",
    "description": "Pchelyonok and Segments",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "math"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417803",
      "last_updated": "2025-07-29T14:46:19.417805",
      "source_url": "https://codeforces.com/contest/1582/problem/E",
      "acquisition_method": "api",
      "contest_id": 1582,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1572_A",
    "source": "codeforces",
    "title": "Book",
    "description": "Book",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418181",
      "last_updated": "2025-07-29T14:46:19.418183",
      "source_url": "https://codeforces.com/contest/1572/problem/A",
      "acquisition_method": "api",
      "contest_id": 1572,
      "problem_index": "A",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1553_D",
    "source": "codeforces",
    "title": "Backspace",
    "description": "Backspace",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "dp",
      "greedy",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418706",
      "last_updated": "2025-07-29T14:46:19.418708",
      "source_url": "https://codeforces.com/contest/1553/problem/D",
      "acquisition_method": "api",
      "contest_id": 1553,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1536_C",
    "source": "codeforces",
    "title": "Diluc and Kaeya",
    "description": "Diluc and Kaeya",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dp",
      "hashing",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419284",
      "last_updated": "2025-07-29T14:46:19.419285",
      "source_url": "https://codeforces.com/contest/1536/problem/C",
      "acquisition_method": "api",
      "contest_id": 1536,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1528_A",
    "source": "codeforces",
    "title": "Parsa's Humongous Tree",
    "description": "Parsa's Humongous Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419620",
      "last_updated": "2025-07-29T14:46:19.419622",
      "source_url": "https://codeforces.com/contest/1528/problem/A",
      "acquisition_method": "api",
      "contest_id": 1528,
      "problem_index": "A",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1506_G",
    "source": "codeforces",
    "title": "Maximize the Remaining String",
    "description": "Maximize the Remaining String",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420210",
      "last_updated": "2025-07-29T14:46:19.420212",
      "source_url": "https://codeforces.com/contest/1506/problem/G",
      "acquisition_method": "api",
      "contest_id": 1506,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1494_C",
    "source": "codeforces",
    "title": "1D Sokoban",
    "description": "1D Sokoban",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420601",
      "last_updated": "2025-07-29T14:46:19.420602",
      "source_url": "https://codeforces.com/contest/1494/problem/C",
      "acquisition_method": "api",
      "contest_id": 1494,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1493_D",
    "source": "codeforces",
    "title": "GCD of an Array",
    "description": "GCD of an Array",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "hashing",
      "implementation",
      "math",
      "number_theory",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420627",
      "last_updated": "2025-07-29T14:46:19.420629",
      "source_url": "https://codeforces.com/contest/1493/problem/D",
      "acquisition_method": "api",
      "contest_id": 1493,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1487_E",
    "source": "codeforces",
    "title": "Cheap Dinner",
    "description": "Cheap Dinner",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420806",
      "last_updated": "2025-07-29T14:46:19.420807",
      "source_url": "https://codeforces.com/contest/1487/problem/E",
      "acquisition_method": "api",
      "contest_id": 1487,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1472_E",
    "source": "codeforces",
    "title": "Correct Placement",
    "description": "Correct Placement",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421208",
      "last_updated": "2025-07-29T14:46:19.421209",
      "source_url": "https://codeforces.com/contest/1472/problem/E",
      "acquisition_method": "api",
      "contest_id": 1472,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1454_F",
    "source": "codeforces",
    "title": "Array Partition",
    "description": "Array Partition",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421610",
      "last_updated": "2025-07-29T14:46:19.421612",
      "source_url": "https://codeforces.com/contest/1454/problem/F",
      "acquisition_method": "api",
      "contest_id": 1454,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1451_C",
    "source": "codeforces",
    "title": "String Equality",
    "description": "String Equality",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421719",
      "last_updated": "2025-07-29T14:46:19.421720",
      "source_url": "https://codeforces.com/contest/1451/problem/C",
      "acquisition_method": "api",
      "contest_id": 1451,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1450_D",
    "source": "codeforces",
    "title": "Rating Compression",
    "description": "Rating Compression",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "implementation",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421757",
      "last_updated": "2025-07-29T14:46:19.421758",
      "source_url": "https://codeforces.com/contest/1450/problem/D",
      "acquisition_method": "api",
      "contest_id": 1450,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1436_D",
    "source": "codeforces",
    "title": "Bandit in a City",
    "description": "Bandit in a City",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422095",
      "last_updated": "2025-07-29T14:46:19.422097",
      "source_url": "https://codeforces.com/contest/1436/problem/D",
      "acquisition_method": "api",
      "contest_id": 1436,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1430_D",
    "source": "codeforces",
    "title": "String Deletion",
    "description": "String Deletion",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422216",
      "last_updated": "2025-07-29T14:46:19.422218",
      "source_url": "https://codeforces.com/contest/1430/problem/D",
      "acquisition_method": "api",
      "contest_id": 1430,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1420_C2",
    "source": "codeforces",
    "title": "Pokémon Army (hard version)",
    "description": "Pokémon Army (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "implementation"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422538",
      "last_updated": "2025-07-29T14:46:19.422540",
      "source_url": "https://codeforces.com/contest/1420/problem/C2",
      "acquisition_method": "api",
      "contest_id": 1420,
      "problem_index": "C2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1408_D",
    "source": "codeforces",
    "title": "Searchlights",
    "description": "Searchlights",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "implementation",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422816",
      "last_updated": "2025-07-29T14:46:19.422818",
      "source_url": "https://codeforces.com/contest/1408/problem/D",
      "acquisition_method": "api",
      "contest_id": 1408,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1401_D",
    "source": "codeforces",
    "title": "Maximum Distributed Tree",
    "description": "Maximum Distributed Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number_theory",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422958",
      "last_updated": "2025-07-29T14:46:19.422959",
      "source_url": "https://codeforces.com/contest/1401/problem/D",
      "acquisition_method": "api",
      "contest_id": 1401,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1400_E",
    "source": "codeforces",
    "title": "Clear the Multiset",
    "description": "Clear the Multiset",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422992",
      "last_updated": "2025-07-29T14:46:19.422994",
      "source_url": "https://codeforces.com/contest/1400/problem/E",
      "acquisition_method": "api",
      "contest_id": 1400,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1399_E2",
    "source": "codeforces",
    "title": "Weights Division (hard version)",
    "description": "Weights Division (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "greedy",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423021",
      "last_updated": "2025-07-29T14:46:19.423023",
      "source_url": "https://codeforces.com/contest/1399/problem/E2",
      "acquisition_method": "api",
      "contest_id": 1399,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1388_D",
    "source": "codeforces",
    "title": "Captain Flint and Treasure",
    "description": "Captain Flint and Treasure",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423315",
      "last_updated": "2025-07-29T14:46:19.423316",
      "source_url": "https://codeforces.com/contest/1388/problem/D",
      "acquisition_method": "api",
      "contest_id": 1388,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1369_D",
    "source": "codeforces",
    "title": "TediousLee",
    "description": "TediousLee",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423837",
      "last_updated": "2025-07-29T14:46:19.423838",
      "source_url": "https://codeforces.com/contest/1369/problem/D",
      "acquisition_method": "api",
      "contest_id": 1369,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1367_E",
    "source": "codeforces",
    "title": "Necklace Assembly",
    "description": "Necklace Assembly",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423915",
      "last_updated": "2025-07-29T14:46:19.423917",
      "source_url": "https://codeforces.com/contest/1367/problem/E",
      "acquisition_method": "api",
      "contest_id": 1367,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1366_E",
    "source": "codeforces",
    "title": "Two Arrays",
    "description": "Two Arrays",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "combinatorics",
      "constructive_algorithms",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423950",
      "last_updated": "2025-07-29T14:46:19.423951",
      "source_url": "https://codeforces.com/contest/1366/problem/E",
      "acquisition_method": "api",
      "contest_id": 1366,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1342_D",
    "source": "codeforces",
    "title": "Multiple Testcases",
    "description": "Multiple Testcases",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.425345",
      "last_updated": "2025-07-29T14:46:19.425347",
      "source_url": "https://codeforces.com/contest/1342/problem/D",
      "acquisition_method": "api",
      "contest_id": 1342,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1335_E1",
    "source": "codeforces",
    "title": "Three Blocks Palindrome (easy version)",
    "description": "Three Blocks Palindrome (easy version)",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.425659",
      "last_updated": "2025-07-29T14:46:19.425660",
      "source_url": "https://codeforces.com/contest/1335/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1335,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1334_E",
    "source": "codeforces",
    "title": "Divisor Paths",
    "description": "Divisor Paths",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "math",
      "number_theory"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.425964",
      "last_updated": "2025-07-29T14:46:19.425966",
      "source_url": "https://codeforces.com/contest/1334/problem/E",
      "acquisition_method": "api",
      "contest_id": 1334,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1326_D2",
    "source": "codeforces",
    "title": "Prefix-Suffix Palindrome (Hard version)",
    "description": "Prefix-Suffix Palindrome (Hard version)",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "greedy",
      "hashing",
      "string_suffix_structures",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.426294",
      "last_updated": "2025-07-29T14:46:19.426296",
      "source_url": "https://codeforces.com/contest/1326/problem/D2",
      "acquisition_method": "api",
      "contest_id": 1326,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1307_D",
    "source": "codeforces",
    "title": "Cow and Fields",
    "description": "Cow and Fields",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "shortest_paths",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.426637",
      "last_updated": "2025-07-29T14:46:19.426639",
      "source_url": "https://codeforces.com/contest/1307/problem/D",
      "acquisition_method": "api",
      "contest_id": 1307,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1301_C",
    "source": "codeforces",
    "title": "Ayoub's function",
    "description": "Ayoub's function",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "greedy",
      "math",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.426819",
      "last_updated": "2025-07-29T14:46:19.426821",
      "source_url": "https://codeforces.com/contest/1301/problem/C",
      "acquisition_method": "api",
      "contest_id": 1301,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1290_B",
    "source": "codeforces",
    "title": "Irreducible Anagrams",
    "description": "Irreducible Anagrams",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427084",
      "last_updated": "2025-07-29T14:46:19.427085",
      "source_url": "https://codeforces.com/contest/1290/problem/B",
      "acquisition_method": "api",
      "contest_id": 1290,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1286_B",
    "source": "codeforces",
    "title": "Numbers on Tree",
    "description": "Numbers on Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427154",
      "last_updated": "2025-07-29T14:46:19.427155",
      "source_url": "https://codeforces.com/contest/1286/problem/B",
      "acquisition_method": "api",
      "contest_id": 1286,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1284_B",
    "source": "codeforces",
    "title": "New Year and Ascent Sequence",
    "description": "New Year and Ascent Sequence",
    "difficulty": {
      "level": "medium",
      "rating": 1400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1400,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "data_structures",
      "dp",
      "implementation",
      "sortings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427232",
      "last_updated": "2025-07-29T14:46:19.427233",
      "source_url": "https://codeforces.com/contest/1284/problem/B",
      "acquisition_method": "api",
      "contest_id": 1284,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1266_D",
    "source": "codeforces",
    "title": "Decreasing Debts",
    "description": "Decreasing Debts",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427724",
      "last_updated": "2025-07-29T14:46:19.427726",
      "source_url": "https://codeforces.com/contest/1266/problem/D",
      "acquisition_method": "api",
      "contest_id": 1266,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1238_D",
    "source": "codeforces",
    "title": "AB-string",
    "description": "AB-string",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "dp",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.428353",
      "last_updated": "2025-07-29T14:46:19.428355",
      "source_url": "https://codeforces.com/contest/1238/problem/D",
      "acquisition_method": "api",
      "contest_id": 1238,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1220_E",
    "source": "codeforces",
    "title": "Tourism",
    "description": "Tourism",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.428689",
      "last_updated": "2025-07-29T14:46:19.428691",
      "source_url": "https://codeforces.com/contest/1220/problem/E",
      "acquisition_method": "api",
      "contest_id": 1220,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1213_F",
    "source": "codeforces",
    "title": "Unstable String Sort",
    "description": "Unstable String Sort",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.429953",
      "last_updated": "2025-07-29T14:46:19.429955",
      "source_url": "https://codeforces.com/contest/1213/problem/F",
      "acquisition_method": "api",
      "contest_id": 1213,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1202_C",
    "source": "codeforces",
    "title": "You Are Given a WASD-string...",
    "description": "You Are Given a WASD-string...",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "strings"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430333",
      "last_updated": "2025-07-29T14:46:19.430334",
      "source_url": "https://codeforces.com/contest/1202/problem/C",
      "acquisition_method": "api",
      "contest_id": 1202,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1181_D",
    "source": "codeforces",
    "title": "Irrigation",
    "description": "Irrigation",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "implementation",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430936",
      "last_updated": "2025-07-29T14:46:19.430937",
      "source_url": "https://codeforces.com/contest/1181/problem/D",
      "acquisition_method": "api",
      "contest_id": 1181,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1179_C",
    "source": "codeforces",
    "title": "Serge and Dining Room",
    "description": "Serge and Dining Room",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "graph_matchings",
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430974",
      "last_updated": "2025-07-29T14:46:19.430975",
      "source_url": "https://codeforces.com/contest/1179/problem/C",
      "acquisition_method": "api",
      "contest_id": 1179,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1167_E",
    "source": "codeforces",
    "title": "Range Deleting",
    "description": "Range Deleting",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "combinatorics",
      "data_structures",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431263",
      "last_updated": "2025-07-29T14:46:19.431264",
      "source_url": "https://codeforces.com/contest/1167/problem/E",
      "acquisition_method": "api",
      "contest_id": 1167,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1155_D",
    "source": "codeforces",
    "title": "Beautiful Array",
    "description": "Beautiful Array",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431581",
      "last_updated": "2025-07-29T14:46:19.431583",
      "source_url": "https://codeforces.com/contest/1155/problem/D",
      "acquisition_method": "api",
      "contest_id": 1155,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1153_D",
    "source": "codeforces",
    "title": "Serval and Rooted Tree",
    "description": "Serval and Rooted Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431648",
      "last_updated": "2025-07-29T14:46:19.431649",
      "source_url": "https://codeforces.com/contest/1153/problem/D",
      "acquisition_method": "api",
      "contest_id": 1153,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1141_G",
    "source": "codeforces",
    "title": "Privatization of Roads in Treeland",
    "description": "Privatization of Roads in Treeland",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431968",
      "last_updated": "2025-07-29T14:46:19.431969",
      "source_url": "https://codeforces.com/contest/1141/problem/G",
      "acquisition_method": "api",
      "contest_id": 1141,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1101_D",
    "source": "codeforces",
    "title": "GCD Counting",
    "description": "GCD Counting",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432904",
      "last_updated": "2025-07-29T14:46:19.432906",
      "source_url": "https://codeforces.com/contest/1101/problem/D",
      "acquisition_method": "api",
      "contest_id": 1101,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1056_D",
    "source": "codeforces",
    "title": "Decorate Apple Tree",
    "description": "Decorate Apple Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.434014",
      "last_updated": "2025-07-29T14:46:19.434016",
      "source_url": "https://codeforces.com/contest/1056/problem/D",
      "acquisition_method": "api",
      "contest_id": 1056,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1041_C",
    "source": "codeforces",
    "title": "Coffee Break",
    "description": "Coffee Break",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.434365",
      "last_updated": "2025-07-29T14:46:19.434366",
      "source_url": "https://codeforces.com/contest/1041/problem/C",
      "acquisition_method": "api",
      "contest_id": 1041,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_982_C",
    "source": "codeforces",
    "title": "Cut 'em all!",
    "description": "Cut 'em all!",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435835",
      "last_updated": "2025-07-29T14:46:19.435836",
      "source_url": "https://codeforces.com/contest/982/problem/C",
      "acquisition_method": "api",
      "contest_id": 982,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_958_B2",
    "source": "codeforces",
    "title": "Maximum Control (medium)",
    "description": "Maximum Control (medium)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.436361",
      "last_updated": "2025-07-29T14:46:19.436362",
      "source_url": "https://codeforces.com/contest/958/problem/B2",
      "acquisition_method": "api",
      "contest_id": 958,
      "problem_index": "B2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_954_G",
    "source": "codeforces",
    "title": "Castle Defense",
    "description": "Castle Defense",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.436448",
      "last_updated": "2025-07-29T14:46:19.436449",
      "source_url": "https://codeforces.com/contest/954/problem/G",
      "acquisition_method": "api",
      "contest_id": 954,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_923_C",
    "source": "codeforces",
    "title": "Perfect Security",
    "description": "Perfect Security",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.437015",
      "last_updated": "2025-07-29T14:46:19.437017",
      "source_url": "https://codeforces.com/contest/923/problem/C",
      "acquisition_method": "api",
      "contest_id": 923,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_875_D",
    "source": "codeforces",
    "title": "High Cry",
    "description": "High Cry",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "combinatorics",
      "data_structures",
      "divide_and_conquer"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.438156",
      "last_updated": "2025-07-29T14:46:19.438158",
      "source_url": "https://codeforces.com/contest/875/problem/D",
      "acquisition_method": "api",
      "contest_id": 875,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_818_E",
    "source": "codeforces",
    "title": "Card Game Again",
    "description": "Card Game Again",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "number_theory",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.439345",
      "last_updated": "2025-07-29T14:46:19.439347",
      "source_url": "https://codeforces.com/contest/818/problem/E",
      "acquisition_method": "api",
      "contest_id": 818,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_814_D",
    "source": "codeforces",
    "title": "An overnight dance in discotheque",
    "description": "An overnight dance in discotheque",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "geometry",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.439442",
      "last_updated": "2025-07-29T14:46:19.439443",
      "source_url": "https://codeforces.com/contest/814/problem/D",
      "acquisition_method": "api",
      "contest_id": 814,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_767_D",
    "source": "codeforces",
    "title": "Cartons of milk",
    "description": "Cartons of milk",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "sortings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.440667",
      "last_updated": "2025-07-29T14:46:19.440668",
      "source_url": "https://codeforces.com/contest/767/problem/D",
      "acquisition_method": "api",
      "contest_id": 767,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_762_C",
    "source": "codeforces",
    "title": "Two strings",
    "description": "Two strings",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "hashing",
      "strings",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.440792",
      "last_updated": "2025-07-29T14:46:19.440794",
      "source_url": "https://codeforces.com/contest/762/problem/C",
      "acquisition_method": "api",
      "contest_id": 762,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_748_E",
    "source": "codeforces",
    "title": "Santa Claus and Tangerines",
    "description": "Santa Claus and Tangerines",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.441078",
      "last_updated": "2025-07-29T14:46:19.441080",
      "source_url": "https://codeforces.com/contest/748/problem/E",
      "acquisition_method": "api",
      "contest_id": 748,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  }
]