[
  {
    "id": "cf_979_D",
    "source": "codeforces",
    "title": "Kuro and GCD and XOR and SUM",
    "description": "Kuro and GCD and XOR and SUM",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "brute_force",
      "data_structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number_theory",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435920",
      "last_updated": "2025-07-29T14:46:19.435922",
      "source_url": "https://codeforces.com/contest/979/problem/D",
      "acquisition_method": "api",
      "contest_id": 979,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 32.0
  },
  {
    "id": "cf_2093_G",
    "source": "codeforces",
    "title": "Shorten the Array",
    "description": "Shorten the Array",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "strings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397504",
      "last_updated": "2025-07-29T14:46:19.397506",
      "source_url": "https://codeforces.com/contest/2093/problem/G",
      "acquisition_method": "api",
      "contest_id": 2093,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_2064_D",
    "source": "codeforces",
    "title": "Eating",
    "description": "Eating",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "brute_force",
      "data_structures",
      "dp",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398371",
      "last_updated": "2025-07-29T14:46:19.398372",
      "source_url": "https://codeforces.com/contest/2064/problem/D",
      "acquisition_method": "api",
      "contest_id": 2064,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_1416_C",
    "source": "codeforces",
    "title": "XOR Inverse",
    "description": "XOR Inverse",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "greedy",
      "math",
      "sortings",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422651",
      "last_updated": "2025-07-29T14:46:19.422652",
      "source_url": "https://codeforces.com/contest/1416/problem/C",
      "acquisition_method": "api",
      "contest_id": 1416,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 28.0
  },
  {
    "id": "cf_2063_F1",
    "source": "codeforces",
    "title": "Counting Is Not Fun (Easy Version)",
    "description": "Counting Is Not Fun (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "hashing",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398407",
      "last_updated": "2025-07-29T14:46:19.398408",
      "source_url": "https://codeforces.com/contest/2063/problem/F1",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_1866_K",
    "source": "codeforces",
    "title": "Keen Tree Calculation",
    "description": "Keen Tree Calculation",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404324",
      "last_updated": "2025-07-29T14:46:19.404325",
      "source_url": "https://codeforces.com/contest/1866/problem/K",
      "acquisition_method": "api",
      "contest_id": 1866,
      "problem_index": "K",
      "solved_count": 0
    },
    "google_relevance_score": 26.0
  },
  {
    "id": "cf_2112_E",
    "source": "codeforces",
    "title": "Tree Colorings",
    "description": "Tree Colorings",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "graphs",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397046",
      "last_updated": "2025-07-29T14:46:19.397048",
      "source_url": "https://codeforces.com/contest/2112/problem/E",
      "acquisition_method": "api",
      "contest_id": 2112,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2063_C",
    "source": "codeforces",
    "title": "Remove Exactly Two",
    "description": "Remove Exactly Two",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398421",
      "last_updated": "2025-07-29T14:46:19.398423",
      "source_url": "https://codeforces.com/contest/2063/problem/C",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2040_E",
    "source": "codeforces",
    "title": "Control of Randomness",
    "description": "Control of Randomness",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399186",
      "last_updated": "2025-07-29T14:46:19.399188",
      "source_url": "https://codeforces.com/contest/2040/problem/E",
      "acquisition_method": "api",
      "contest_id": 2040,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2032_D",
    "source": "codeforces",
    "title": "Genokraken",
    "description": "Genokraken",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "graphs",
      "greedy",
      "implementation",
      "interactive",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399564",
      "last_updated": "2025-07-29T14:46:19.399565",
      "source_url": "https://codeforces.com/contest/2032/problem/D",
      "acquisition_method": "api",
      "contest_id": 2032,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1857_G",
    "source": "codeforces",
    "title": "Counting Graphs",
    "description": "Counting Graphs",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "combinatorics",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404616",
      "last_updated": "2025-07-29T14:46:19.404617",
      "source_url": "https://codeforces.com/contest/1857/problem/G",
      "acquisition_method": "api",
      "contest_id": 1857,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1851_G",
    "source": "codeforces",
    "title": "Vlad and the Mountains",
    "description": "Vlad and the Mountains",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404760",
      "last_updated": "2025-07-29T14:46:19.409615",
      "source_url": "https://codeforces.com/contest/1851/problem/G",
      "acquisition_method": "api",
      "contest_id": 1851,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1843_F1",
    "source": "codeforces",
    "title": "Omsk Metro (simple version)",
    "description": "Omsk Metro (simple version)",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409926",
      "last_updated": "2025-07-29T14:46:19.409928",
      "source_url": "https://codeforces.com/contest/1843/problem/F1",
      "acquisition_method": "api",
      "contest_id": 1843,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1827_B1",
    "source": "codeforces",
    "title": "Range Sorting (Easy Version)",
    "description": "Range Sorting (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "dsu",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.410623",
      "last_updated": "2025-07-29T14:46:19.410624",
      "source_url": "https://codeforces.com/contest/1827/problem/B1",
      "acquisition_method": "api",
      "contest_id": 1827,
      "problem_index": "B1",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1739_D",
    "source": "codeforces",
    "title": "Reset K Edges",
    "description": "Reset K Edges",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413353",
      "last_updated": "2025-07-29T14:46:19.413355",
      "source_url": "https://codeforces.com/contest/1739/problem/D",
      "acquisition_method": "api",
      "contest_id": 1739,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1671_E",
    "source": "codeforces",
    "title": "Preorder",
    "description": "Preorder",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "divide_and_conquer",
      "dp",
      "dsu",
      "hashing",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415312",
      "last_updated": "2025-07-29T14:46:19.415313",
      "source_url": "https://codeforces.com/contest/1671/problem/E",
      "acquisition_method": "api",
      "contest_id": 1671,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1535_E",
    "source": "codeforces",
    "title": "Gold Transfer",
    "description": "Gold Transfer",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419306",
      "last_updated": "2025-07-29T14:46:19.419308",
      "source_url": "https://codeforces.com/contest/1535/problem/E",
      "acquisition_method": "api",
      "contest_id": 1535,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1446_C",
    "source": "codeforces",
    "title": "Xor Tree",
    "description": "Xor Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421815",
      "last_updated": "2025-07-29T14:46:19.421817",
      "source_url": "https://codeforces.com/contest/1446/problem/C",
      "acquisition_method": "api",
      "contest_id": 1446,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1383_A",
    "source": "codeforces",
    "title": "String Transformation 1",
    "description": "String Transformation 1",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "strings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423496",
      "last_updated": "2025-07-29T14:46:19.423498",
      "source_url": "https://codeforces.com/contest/1383/problem/A",
      "acquisition_method": "api",
      "contest_id": 1383,
      "problem_index": "A",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1285_D",
    "source": "codeforces",
    "title": "Dr. Evil Underscores",
    "description": "Dr. Evil Underscores",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427174",
      "last_updated": "2025-07-29T14:46:19.427179",
      "source_url": "https://codeforces.com/contest/1285/problem/D",
      "acquisition_method": "api",
      "contest_id": 1285,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_1175_E",
    "source": "codeforces",
    "title": "Minimal Segment Cover",
    "description": "Minimal Segment Cover",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431085",
      "last_updated": "2025-07-29T14:46:19.431086",
      "source_url": "https://codeforces.com/contest/1175/problem/E",
      "acquisition_method": "api",
      "contest_id": 1175,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_965_E",
    "source": "codeforces",
    "title": "Short Code",
    "description": "Short Code",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.436083",
      "last_updated": "2025-07-29T14:46:19.436085",
      "source_url": "https://codeforces.com/contest/965/problem/E",
      "acquisition_method": "api",
      "contest_id": 965,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_722_D",
    "source": "codeforces",
    "title": "Generating Sets",
    "description": "Generating Sets",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.441729",
      "last_updated": "2025-07-29T14:46:19.441731",
      "source_url": "https://codeforces.com/contest/722/problem/D",
      "acquisition_method": "api",
      "contest_id": 722,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 24.0
  },
  {
    "id": "cf_2126_G2",
    "source": "codeforces",
    "title": "Big Wins!  (hard version)",
    "description": "Big Wins!  (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396611",
      "last_updated": "2025-07-29T14:46:19.396612",
      "source_url": "https://codeforces.com/contest/2126/problem/G2",
      "acquisition_method": "api",
      "contest_id": 2126,
      "problem_index": "G2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2041_I",
    "source": "codeforces",
    "title": "Auto Complete",
    "description": "Auto Complete",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "hashing",
      "implementation",
      "sortings",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399135",
      "last_updated": "2025-07-29T14:46:19.399136",
      "source_url": "https://codeforces.com/contest/2041/problem/I",
      "acquisition_method": "api",
      "contest_id": 2041,
      "problem_index": "I",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2021_E3",
    "source": "codeforces",
    "title": "Digital Village (Extreme Version)",
    "description": "Digital Village (Extreme Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399868",
      "last_updated": "2025-07-29T14:46:19.399869",
      "source_url": "https://codeforces.com/contest/2021/problem/E3",
      "acquisition_method": "api",
      "contest_id": 2021,
      "problem_index": "E3",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2021_E1",
    "source": "codeforces",
    "title": "Digital Village (Easy Version)",
    "description": "Digital Village (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399877",
      "last_updated": "2025-07-29T14:46:19.399879",
      "source_url": "https://codeforces.com/contest/2021/problem/E1",
      "acquisition_method": "api",
      "contest_id": 2021,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2013_F1",
    "source": "codeforces",
    "title": "Game in Tree (Easy Version)",
    "description": "Game in Tree (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dp",
      "games",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400022",
      "last_updated": "2025-07-29T14:46:19.400024",
      "source_url": "https://codeforces.com/contest/2013/problem/F1",
      "acquisition_method": "api",
      "contest_id": 2013,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2002_D2",
    "source": "codeforces",
    "title": "DFS Checker (Hard Version)",
    "description": "DFS Checker (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "hashing",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400378",
      "last_updated": "2025-07-29T14:46:19.400379",
      "source_url": "https://codeforces.com/contest/2002/problem/D2",
      "acquisition_method": "api",
      "contest_id": 2002,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1980_G",
    "source": "codeforces",
    "title": "Yasya and the Mysterious Tree",
    "description": "Yasya and the Mysterious Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401172",
      "last_updated": "2025-07-29T14:46:19.401173",
      "source_url": "https://codeforces.com/contest/1980/problem/G",
      "acquisition_method": "api",
      "contest_id": 1980,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1957_F1",
    "source": "codeforces",
    "title": "Frequency Mismatch (Easy Version)",
    "description": "Frequency Mismatch (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "hashing",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401721",
      "last_updated": "2025-07-29T14:46:19.401723",
      "source_url": "https://codeforces.com/contest/1957/problem/F1",
      "acquisition_method": "api",
      "contest_id": 1957,
      "problem_index": "F1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1887_D",
    "source": "codeforces",
    "title": "Split",
    "description": "Split",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "math",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403786",
      "last_updated": "2025-07-29T14:46:19.403787",
      "source_url": "https://codeforces.com/contest/1887/problem/D",
      "acquisition_method": "api",
      "contest_id": 1887,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1849_F",
    "source": "codeforces",
    "title": "XOR Partition",
    "description": "XOR Partition",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409719",
      "last_updated": "2025-07-29T14:46:19.409720",
      "source_url": "https://codeforces.com/contest/1849/problem/F",
      "acquisition_method": "api",
      "contest_id": 1849,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1794_E",
    "source": "codeforces",
    "title": "Labeling the Tree with Distances",
    "description": "Labeling the Tree with Distances",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411620",
      "last_updated": "2025-07-29T14:46:19.411621",
      "source_url": "https://codeforces.com/contest/1794/problem/E",
      "acquisition_method": "api",
      "contest_id": 1794,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1771_F",
    "source": "codeforces",
    "title": "Hossam and Range Minimum Query",
    "description": "Hossam and Range Minimum Query",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "bitmasks",
      "data_structures",
      "hashing",
      "probabilities",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412372",
      "last_updated": "2025-07-29T14:46:19.412374",
      "source_url": "https://codeforces.com/contest/1771/problem/F",
      "acquisition_method": "api",
      "contest_id": 1771,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1761_E",
    "source": "codeforces",
    "title": "Make It Connected",
    "description": "Make It Connected",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "constructive_algorithms",
      "dsu",
      "graphs",
      "greedy",
      "matrices",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412834",
      "last_updated": "2025-07-29T14:46:19.412835",
      "source_url": "https://codeforces.com/contest/1761/problem/E",
      "acquisition_method": "api",
      "contest_id": 1761,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1748_E",
    "source": "codeforces",
    "title": "Yet Another Array Counting Problem",
    "description": "Yet Another Array Counting Problem",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "flows",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413074",
      "last_updated": "2025-07-29T14:46:19.413076",
      "source_url": "https://codeforces.com/contest/1748/problem/E",
      "acquisition_method": "api",
      "contest_id": 1748,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1725_E",
    "source": "codeforces",
    "title": "Electrical Efficiency",
    "description": "Electrical Efficiency",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dp",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413786",
      "last_updated": "2025-07-29T14:46:19.413788",
      "source_url": "https://codeforces.com/contest/1725/problem/E",
      "acquisition_method": "api",
      "contest_id": 1725,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1706_E",
    "source": "codeforces",
    "title": "Qpwoeirut and Vertices",
    "description": "Qpwoeirut and Vertices",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414290",
      "last_updated": "2025-07-29T14:46:19.414292",
      "source_url": "https://codeforces.com/contest/1706/problem/E",
      "acquisition_method": "api",
      "contest_id": 1706,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1633_E",
    "source": "codeforces",
    "title": "Spanning Tree Queries",
    "description": "Spanning Tree Queries",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416295",
      "last_updated": "2025-07-29T14:46:19.416296",
      "source_url": "https://codeforces.com/contest/1633/problem/E",
      "acquisition_method": "api",
      "contest_id": 1633,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1625_E1",
    "source": "codeforces",
    "title": "Cats on the Upgrade (easy version)",
    "description": "Cats on the Upgrade (easy version)",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416476",
      "last_updated": "2025-07-29T14:46:19.416477",
      "source_url": "https://codeforces.com/contest/1625/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1625,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1292_D",
    "source": "codeforces",
    "title": "Chaotic V.",
    "description": "Chaotic V.",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427026",
      "last_updated": "2025-07-29T14:46:19.427027",
      "source_url": "https://codeforces.com/contest/1292/problem/D",
      "acquisition_method": "api",
      "contest_id": 1292,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1285_E",
    "source": "codeforces",
    "title": "Delete a Segment",
    "description": "Delete a Segment",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "data_structures",
      "dp",
      "graphs",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427169",
      "last_updated": "2025-07-29T14:46:19.427171",
      "source_url": "https://codeforces.com/contest/1285/problem/E",
      "acquisition_method": "api",
      "contest_id": 1285,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1059_E",
    "source": "codeforces",
    "title": "Split the Tree",
    "description": "Split the Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.433949",
      "last_updated": "2025-07-29T14:46:19.433950",
      "source_url": "https://codeforces.com/contest/1059/problem/E",
      "acquisition_method": "api",
      "contest_id": 1059,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_1004_E",
    "source": "codeforces",
    "title": "Sonya and Ice Cream",
    "description": "Sonya and Ice Cream",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "greedy",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435177",
      "last_updated": "2025-07-29T14:46:19.435178",
      "source_url": "https://codeforces.com/contest/1004/problem/E",
      "acquisition_method": "api",
      "contest_id": 1004,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_776_F",
    "source": "codeforces",
    "title": "Sherlock's bet to Moriarty",
    "description": "Sherlock's bet to Moriarty",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "divide_and_conquer",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.440403",
      "last_updated": "2025-07-29T14:46:19.440404",
      "source_url": "https://codeforces.com/contest/776/problem/F",
      "acquisition_method": "api",
      "contest_id": 776,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_708_C",
    "source": "codeforces",
    "title": "Centroids",
    "description": "Centroids",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.442032",
      "last_updated": "2025-07-29T14:46:19.442033",
      "source_url": "https://codeforces.com/contest/708/problem/C",
      "acquisition_method": "api",
      "contest_id": 708,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_627_D",
    "source": "codeforces",
    "title": "Preorder Test",
    "description": "Preorder Test",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.443709",
      "last_updated": "2025-07-29T14:46:19.443710",
      "source_url": "https://codeforces.com/contest/627/problem/D",
      "acquisition_method": "api",
      "contest_id": 627,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_557_E",
    "source": "codeforces",
    "title": "Ann and Half-Palindrome",
    "description": "Ann and Half-Palindrome",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "graphs",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.445127",
      "last_updated": "2025-07-29T14:46:19.445128",
      "source_url": "https://codeforces.com/contest/557/problem/E",
      "acquisition_method": "api",
      "contest_id": 557,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_414_D",
    "source": "codeforces",
    "title": "Mashmokh and Water Tanks",
    "description": "Mashmokh and Water Tanks",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.448870",
      "last_updated": "2025-07-29T14:46:19.448871",
      "source_url": "https://codeforces.com/contest/414/problem/D",
      "acquisition_method": "api",
      "contest_id": 414,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 22.0
  },
  {
    "id": "cf_2042_E",
    "source": "codeforces",
    "title": "Vertex Pairs",
    "description": "Vertex Pairs",
    "difficulty": {
      "level": "hard",
      "rating": 2900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2900,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399093",
      "last_updated": "2025-07-29T14:46:19.399094",
      "source_url": "https://codeforces.com/contest/2042/problem/E",
      "acquisition_method": "api",
      "contest_id": 2042,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_1920_F2",
    "source": "codeforces",
    "title": "Smooth Sailing (Hard Version)",
    "description": "Smooth Sailing (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dsu",
      "geometry",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402805",
      "last_updated": "2025-07-29T14:46:19.402806",
      "source_url": "https://codeforces.com/contest/1920/problem/F2",
      "acquisition_method": "api",
      "contest_id": 1920,
      "problem_index": "F2",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_1608_G",
    "source": "codeforces",
    "title": "Alphabetic Tree",
    "description": "Alphabetic Tree",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "hashing",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417224",
      "last_updated": "2025-07-29T14:46:19.417225",
      "source_url": "https://codeforces.com/contest/1608/problem/G",
      "acquisition_method": "api",
      "contest_id": 1608,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 21.0
  },
  {
    "id": "cf_2115_B",
    "source": "codeforces",
    "title": "Gellyfish and Camellia Japonica",
    "description": "Gellyfish and Camellia Japonica",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396977",
      "last_updated": "2025-07-29T14:46:19.396978",
      "source_url": "https://codeforces.com/contest/2115/problem/B",
      "acquisition_method": "api",
      "contest_id": 2115,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2106_G1",
    "source": "codeforces",
    "title": "Baudelaire (easy version)",
    "description": "Baudelaire (easy version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "divide_and_conquer",
      "greedy",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397227",
      "last_updated": "2025-07-29T14:46:19.397229",
      "source_url": "https://codeforces.com/contest/2106/problem/G1",
      "acquisition_method": "api",
      "contest_id": 2106,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2071_C",
    "source": "codeforces",
    "title": "Trapmigiano Reggiano",
    "description": "Trapmigiano Reggiano",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398100",
      "last_updated": "2025-07-29T14:46:19.398101",
      "source_url": "https://codeforces.com/contest/2071/problem/C",
      "acquisition_method": "api",
      "contest_id": 2071,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2065_F",
    "source": "codeforces",
    "title": "Skibidus and Slay",
    "description": "Skibidus and Slay",
    "difficulty": {
      "level": "medium",
      "rating": 1700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1700,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398295",
      "last_updated": "2025-07-29T14:46:19.398297",
      "source_url": "https://codeforces.com/contest/2065/problem/F",
      "acquisition_method": "api",
      "contest_id": 2065,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2062_E1",
    "source": "codeforces",
    "title": "The Game (Easy Version)",
    "description": "The Game (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "games",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398452",
      "last_updated": "2025-07-29T14:46:19.398453",
      "source_url": "https://codeforces.com/contest/2062/problem/E1",
      "acquisition_method": "api",
      "contest_id": 2062,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2062_D",
    "source": "codeforces",
    "title": "Balanced Tree",
    "description": "Balanced Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398456",
      "last_updated": "2025-07-29T14:46:19.398457",
      "source_url": "https://codeforces.com/contest/2062/problem/D",
      "acquisition_method": "api",
      "contest_id": 2062,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2053_E",
    "source": "codeforces",
    "title": "Resourceful Caterpillar Sequence",
    "description": "Resourceful Caterpillar Sequence",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "games",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398699",
      "last_updated": "2025-07-29T14:46:19.398701",
      "source_url": "https://codeforces.com/contest/2053/problem/E",
      "acquisition_method": "api",
      "contest_id": 2053,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2040_D",
    "source": "codeforces",
    "title": "Non Prime Tree",
    "description": "Non Prime Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "dfs_and_similar",
      "greedy",
      "number_theory",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399191",
      "last_updated": "2025-07-29T14:46:19.399192",
      "source_url": "https://codeforces.com/contest/2040/problem/D",
      "acquisition_method": "api",
      "contest_id": 2040,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2033_G",
    "source": "codeforces",
    "title": "Sakurako and Chefir",
    "description": "Sakurako and Chefir",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399525",
      "last_updated": "2025-07-29T14:46:19.399526",
      "source_url": "https://codeforces.com/contest/2033/problem/G",
      "acquisition_method": "api",
      "contest_id": 2033,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2031_E",
    "source": "codeforces",
    "title": "Penchick and Chloe's Trees",
    "description": "Penchick and Chloe's Trees",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399586",
      "last_updated": "2025-07-29T14:46:19.399587",
      "source_url": "https://codeforces.com/contest/2031/problem/E",
      "acquisition_method": "api",
      "contest_id": 2031,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2029_D",
    "source": "codeforces",
    "title": "Cool Graph",
    "description": "Cool Graph",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399663",
      "last_updated": "2025-07-29T14:46:19.399665",
      "source_url": "https://codeforces.com/contest/2029/problem/D",
      "acquisition_method": "api",
      "contest_id": 2029,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2002_D1",
    "source": "codeforces",
    "title": "DFS Checker (Easy Version)",
    "description": "DFS Checker (Easy Version)",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "hashing",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400383",
      "last_updated": "2025-07-29T14:46:19.400384",
      "source_url": "https://codeforces.com/contest/2002/problem/D1",
      "acquisition_method": "api",
      "contest_id": 2002,
      "problem_index": "D1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_2001_C",
    "source": "codeforces",
    "title": "Guess The Tree",
    "description": "Guess The Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "greedy",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400414",
      "last_updated": "2025-07-29T14:46:19.400415",
      "source_url": "https://codeforces.com/contest/2001/problem/C",
      "acquisition_method": "api",
      "contest_id": 2001,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1997_D",
    "source": "codeforces",
    "title": "Maximize the Root",
    "description": "Maximize the Root",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400532",
      "last_updated": "2025-07-29T14:46:19.400533",
      "source_url": "https://codeforces.com/contest/1997/problem/D",
      "acquisition_method": "api",
      "contest_id": 1997,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1994_D",
    "source": "codeforces",
    "title": "Funny Game",
    "description": "Funny Game",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400639",
      "last_updated": "2025-07-29T14:46:19.400640",
      "source_url": "https://codeforces.com/contest/1994/problem/D",
      "acquisition_method": "api",
      "contest_id": 1994,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1946_C",
    "source": "codeforces",
    "title": "Tree Cutting",
    "description": "Tree Cutting",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402097",
      "last_updated": "2025-07-29T14:46:19.402099",
      "source_url": "https://codeforces.com/contest/1946/problem/C",
      "acquisition_method": "api",
      "contest_id": 1946,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1940_C",
    "source": "codeforces",
    "title": "Burenka and Pether",
    "description": "Burenka and Pether",
    "difficulty": {
      "level": "unrated",
      "rating": null,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "*special",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402265",
      "last_updated": "2025-07-29T14:46:19.402267",
      "source_url": "https://codeforces.com/contest/1940/problem/C",
      "acquisition_method": "api",
      "contest_id": 1940,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1927_F",
    "source": "codeforces",
    "title": "Microcycle",
    "description": "Microcycle",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402626",
      "last_updated": "2025-07-29T14:46:19.402628",
      "source_url": "https://codeforces.com/contest/1927/problem/F",
      "acquisition_method": "api",
      "contest_id": 1927,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1926_G",
    "source": "codeforces",
    "title": "Vlad and Trouble at MIT",
    "description": "Vlad and Trouble at MIT",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "flows",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402652",
      "last_updated": "2025-07-29T14:46:19.402653",
      "source_url": "https://codeforces.com/contest/1926/problem/G",
      "acquisition_method": "api",
      "contest_id": 1926,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1923_E",
    "source": "codeforces",
    "title": "Count Paths",
    "description": "Count Paths",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402724",
      "last_updated": "2025-07-29T14:46:19.402725",
      "source_url": "https://codeforces.com/contest/1923/problem/E",
      "acquisition_method": "api",
      "contest_id": 1923,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1914_G1",
    "source": "codeforces",
    "title": "Light Bulbs (Easy Version)",
    "description": "Light Bulbs (Easy Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403002",
      "last_updated": "2025-07-29T14:46:19.403004",
      "source_url": "https://codeforces.com/contest/1914/problem/G1",
      "acquisition_method": "api",
      "contest_id": 1914,
      "problem_index": "G1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1913_D",
    "source": "codeforces",
    "title": "Array Collapse",
    "description": "Array Collapse",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403045",
      "last_updated": "2025-07-29T14:46:19.403047",
      "source_url": "https://codeforces.com/contest/1913/problem/D",
      "acquisition_method": "api",
      "contest_id": 1913,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1901_E",
    "source": "codeforces",
    "title": "Compressed Tree",
    "description": "Compressed Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403477",
      "last_updated": "2025-07-29T14:46:19.403479",
      "source_url": "https://codeforces.com/contest/1901/problem/E",
      "acquisition_method": "api",
      "contest_id": 1901,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1805_D",
    "source": "codeforces",
    "title": "A Wide, Wide Graph",
    "description": "A Wide, Wide Graph",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411245",
      "last_updated": "2025-07-29T14:46:19.411246",
      "source_url": "https://codeforces.com/contest/1805/problem/D",
      "acquisition_method": "api",
      "contest_id": 1805,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1790_F",
    "source": "codeforces",
    "title": "Timofey and Black-White Tree",
    "description": "Timofey and Black-White Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "dfs_and_similar",
      "divide_and_conquer",
      "graphs",
      "greedy",
      "math",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411751",
      "last_updated": "2025-07-29T14:46:19.411752",
      "source_url": "https://codeforces.com/contest/1790/problem/F",
      "acquisition_method": "api",
      "contest_id": 1790,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1773_B",
    "source": "codeforces",
    "title": "BinCoin",
    "description": "BinCoin",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "divide_and_conquer",
      "hashing",
      "implementation",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412326",
      "last_updated": "2025-07-29T14:46:19.412327",
      "source_url": "https://codeforces.com/contest/1773/problem/B",
      "acquisition_method": "api",
      "contest_id": 1773,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1771_D",
    "source": "codeforces",
    "title": "Hossam and (sub-)palindromic tree",
    "description": "Hossam and (sub-)palindromic tree",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412383",
      "last_updated": "2025-07-29T14:46:19.412384",
      "source_url": "https://codeforces.com/contest/1771/problem/D",
      "acquisition_method": "api",
      "contest_id": 1771,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1740_E",
    "source": "codeforces",
    "title": "Hanging Hearts",
    "description": "Hanging Hearts",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413324",
      "last_updated": "2025-07-29T14:46:19.413325",
      "source_url": "https://codeforces.com/contest/1740/problem/E",
      "acquisition_method": "api",
      "contest_id": 1740,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1721_E",
    "source": "codeforces",
    "title": "Prefix Function Queries",
    "description": "Prefix Function Queries",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "hashing",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413841",
      "last_updated": "2025-07-29T14:46:19.413842",
      "source_url": "https://codeforces.com/contest/1721/problem/E",
      "acquisition_method": "api",
      "contest_id": 1721,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1720_D1",
    "source": "codeforces",
    "title": "Xor-Subsequence (easy version)",
    "description": "Xor-Subsequence (easy version)",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "dp",
      "strings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413872",
      "last_updated": "2025-07-29T14:46:19.413873",
      "source_url": "https://codeforces.com/contest/1720/problem/D1",
      "acquisition_method": "api",
      "contest_id": 1720,
      "problem_index": "D1",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1528_A",
    "source": "codeforces",
    "title": "Parsa's Humongous Tree",
    "description": "Parsa's Humongous Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419620",
      "last_updated": "2025-07-29T14:46:19.419622",
      "source_url": "https://codeforces.com/contest/1528/problem/A",
      "acquisition_method": "api",
      "contest_id": 1528,
      "problem_index": "A",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1436_D",
    "source": "codeforces",
    "title": "Bandit in a City",
    "description": "Bandit in a City",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422095",
      "last_updated": "2025-07-29T14:46:19.422097",
      "source_url": "https://codeforces.com/contest/1436/problem/D",
      "acquisition_method": "api",
      "contest_id": 1436,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1401_D",
    "source": "codeforces",
    "title": "Maximum Distributed Tree",
    "description": "Maximum Distributed Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number_theory",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422958",
      "last_updated": "2025-07-29T14:46:19.422959",
      "source_url": "https://codeforces.com/contest/1401/problem/D",
      "acquisition_method": "api",
      "contest_id": 1401,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1399_E2",
    "source": "codeforces",
    "title": "Weights Division (hard version)",
    "description": "Weights Division (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "greedy",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423021",
      "last_updated": "2025-07-29T14:46:19.423023",
      "source_url": "https://codeforces.com/contest/1399/problem/E2",
      "acquisition_method": "api",
      "contest_id": 1399,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1388_D",
    "source": "codeforces",
    "title": "Captain Flint and Treasure",
    "description": "Captain Flint and Treasure",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423315",
      "last_updated": "2025-07-29T14:46:19.423316",
      "source_url": "https://codeforces.com/contest/1388/problem/D",
      "acquisition_method": "api",
      "contest_id": 1388,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1369_D",
    "source": "codeforces",
    "title": "TediousLee",
    "description": "TediousLee",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423837",
      "last_updated": "2025-07-29T14:46:19.423838",
      "source_url": "https://codeforces.com/contest/1369/problem/D",
      "acquisition_method": "api",
      "contest_id": 1369,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1286_B",
    "source": "codeforces",
    "title": "Numbers on Tree",
    "description": "Numbers on Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427154",
      "last_updated": "2025-07-29T14:46:19.427155",
      "source_url": "https://codeforces.com/contest/1286/problem/B",
      "acquisition_method": "api",
      "contest_id": 1286,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1220_E",
    "source": "codeforces",
    "title": "Tourism",
    "description": "Tourism",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.428689",
      "last_updated": "2025-07-29T14:46:19.428691",
      "source_url": "https://codeforces.com/contest/1220/problem/E",
      "acquisition_method": "api",
      "contest_id": 1220,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1181_D",
    "source": "codeforces",
    "title": "Irrigation",
    "description": "Irrigation",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "implementation",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430936",
      "last_updated": "2025-07-29T14:46:19.430937",
      "source_url": "https://codeforces.com/contest/1181/problem/D",
      "acquisition_method": "api",
      "contest_id": 1181,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1179_C",
    "source": "codeforces",
    "title": "Serge and Dining Room",
    "description": "Serge and Dining Room",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "graph_matchings",
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430974",
      "last_updated": "2025-07-29T14:46:19.430975",
      "source_url": "https://codeforces.com/contest/1179/problem/C",
      "acquisition_method": "api",
      "contest_id": 1179,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1153_D",
    "source": "codeforces",
    "title": "Serval and Rooted Tree",
    "description": "Serval and Rooted Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431648",
      "last_updated": "2025-07-29T14:46:19.431649",
      "source_url": "https://codeforces.com/contest/1153/problem/D",
      "acquisition_method": "api",
      "contest_id": 1153,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1141_G",
    "source": "codeforces",
    "title": "Privatization of Roads in Treeland",
    "description": "Privatization of Roads in Treeland",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.431968",
      "last_updated": "2025-07-29T14:46:19.431969",
      "source_url": "https://codeforces.com/contest/1141/problem/G",
      "acquisition_method": "api",
      "contest_id": 1141,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1101_D",
    "source": "codeforces",
    "title": "GCD Counting",
    "description": "GCD Counting",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432904",
      "last_updated": "2025-07-29T14:46:19.432906",
      "source_url": "https://codeforces.com/contest/1101/problem/D",
      "acquisition_method": "api",
      "contest_id": 1101,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_1056_D",
    "source": "codeforces",
    "title": "Decorate Apple Tree",
    "description": "Decorate Apple Tree",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "constructive_algorithms",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.434014",
      "last_updated": "2025-07-29T14:46:19.434016",
      "source_url": "https://codeforces.com/contest/1056/problem/D",
      "acquisition_method": "api",
      "contest_id": 1056,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_982_C",
    "source": "codeforces",
    "title": "Cut 'em all!",
    "description": "Cut 'em all!",
    "difficulty": {
      "level": "medium",
      "rating": 1500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1500,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435835",
      "last_updated": "2025-07-29T14:46:19.435836",
      "source_url": "https://codeforces.com/contest/982/problem/C",
      "acquisition_method": "api",
      "contest_id": 982,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_958_B2",
    "source": "codeforces",
    "title": "Maximum Control (medium)",
    "description": "Maximum Control (medium)",
    "difficulty": {
      "level": "hard",
      "rating": 2200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.436361",
      "last_updated": "2025-07-29T14:46:19.436362",
      "source_url": "https://codeforces.com/contest/958/problem/B2",
      "acquisition_method": "api",
      "contest_id": 958,
      "problem_index": "B2",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_923_C",
    "source": "codeforces",
    "title": "Perfect Security",
    "description": "Perfect Security",
    "difficulty": {
      "level": "medium",
      "rating": 1800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1800,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.437015",
      "last_updated": "2025-07-29T14:46:19.437017",
      "source_url": "https://codeforces.com/contest/923/problem/C",
      "acquisition_method": "api",
      "contest_id": 923,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_814_D",
    "source": "codeforces",
    "title": "An overnight dance in discotheque",
    "description": "An overnight dance in discotheque",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "geometry",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.439442",
      "last_updated": "2025-07-29T14:46:19.439443",
      "source_url": "https://codeforces.com/contest/814/problem/D",
      "acquisition_method": "api",
      "contest_id": 814,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_739_B",
    "source": "codeforces",
    "title": "Alyona and a tree",
    "description": "Alyona and a tree",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.441283",
      "last_updated": "2025-07-29T14:46:19.441285",
      "source_url": "https://codeforces.com/contest/739/problem/B",
      "acquisition_method": "api",
      "contest_id": 739,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_665_E",
    "source": "codeforces",
    "title": "Beautiful Subarrays",
    "description": "Beautiful Subarrays",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.442877",
      "last_updated": "2025-07-29T14:46:19.442878",
      "source_url": "https://codeforces.com/contest/665/problem/E",
      "acquisition_method": "api",
      "contest_id": 665,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_615_C",
    "source": "codeforces",
    "title": "Running Track",
    "description": "Running Track",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "dp",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.443992",
      "last_updated": "2025-07-29T14:46:19.443994",
      "source_url": "https://codeforces.com/contest/615/problem/C",
      "acquisition_method": "api",
      "contest_id": 615,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_533_B",
    "source": "codeforces",
    "title": "Work Group",
    "description": "Work Group",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.445620",
      "last_updated": "2025-07-29T14:46:19.445621",
      "source_url": "https://codeforces.com/contest/533/problem/B",
      "acquisition_method": "api",
      "contest_id": 533,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_519_E",
    "source": "codeforces",
    "title": "A and B and Lecture Rooms",
    "description": "A and B and Lecture Rooms",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.445911",
      "last_updated": "2025-07-29T14:46:19.445913",
      "source_url": "https://codeforces.com/contest/519/problem/E",
      "acquisition_method": "api",
      "contest_id": 519,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_474_E",
    "source": "codeforces",
    "title": "Pillars",
    "description": "Pillars",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.446767",
      "last_updated": "2025-07-29T14:46:19.446769",
      "source_url": "https://codeforces.com/contest/474/problem/E",
      "acquisition_method": "api",
      "contest_id": 474,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_374_D",
    "source": "codeforces",
    "title": "Inna and Sequence ",
    "description": "Inna and Sequence ",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.449760",
      "last_updated": "2025-07-29T14:46:19.449761",
      "source_url": "https://codeforces.com/contest/374/problem/D",
      "acquisition_method": "api",
      "contest_id": 374,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_231_E",
    "source": "codeforces",
    "title": "Cactus",
    "description": "Cactus",
    "difficulty": {
      "level": "hard",
      "rating": 2100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.452732",
      "last_updated": "2025-07-29T14:46:19.452734",
      "source_url": "https://codeforces.com/contest/231/problem/E",
      "acquisition_method": "api",
      "contest_id": 231,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_75_D",
    "source": "codeforces",
    "title": "Big Maximum Sum",
    "description": "Big Maximum Sum",
    "difficulty": {
      "level": "medium",
      "rating": 2000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2000,
      "standardized_level": "medium"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.456875",
      "last_updated": "2025-07-29T14:46:19.456876",
      "source_url": "https://codeforces.com/contest/75/problem/D",
      "acquisition_method": "api",
      "contest_id": 75,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_14_D",
    "source": "codeforces",
    "title": "Two Paths",
    "description": "Two Paths",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "shortest_paths",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.458499",
      "last_updated": "2025-07-29T14:46:19.458501",
      "source_url": "https://codeforces.com/contest/14/problem/D",
      "acquisition_method": "api",
      "contest_id": 14,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "cf_6_E",
    "source": "codeforces",
    "title": "Exposition",
    "description": "Exposition",
    "difficulty": {
      "level": "medium",
      "rating": 1900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 1900,
      "standardized_level": "medium"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dsu",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.458681",
      "last_updated": "2025-07-29T14:46:19.458683",
      "source_url": "https://codeforces.com/contest/6/problem/E",
      "acquisition_method": "api",
      "contest_id": 6,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 20.0
  },
  {
    "id": "practice_tree_lca",
    "source": "atcoder",
    "title": "Lowest Common Ancestor",
    "description": "Answer LCA queries on tree.",
    "difficulty": {
      "level": "medium",
      "rating": 1600,
      "source_scale": "atcoder_estimated",
      "standardized_rating": 1600,
      "standardized_level": "medium"
    },
    "tags": [
      "trees",
      "lca",
      "binary_lifting",
      "practice"
    ],
    "company_tags": [],
    "constraints": {},
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:55:00.443144",
      "last_updated": "2025-07-29T14:55:00.443146",
      "source_url": "https://atcoder.jp/contests/atcoder library practice/tasks/practice_tree_lca",
      "acquisition_method": "static_dataset",
      "contest": "AtCoder Library Practice",
      "contest_type": "Practice",
      "is_competitive_programming": true
    },
    "google_relevance_score": 18.8
  },
  {
    "id": "cf_2104_G",
    "source": "codeforces",
    "title": "Modulo 3",
    "description": "Modulo 3",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397258",
      "last_updated": "2025-07-29T14:46:19.397260",
      "source_url": "https://codeforces.com/contest/2104/problem/G",
      "acquisition_method": "api",
      "contest_id": 2104,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2097_B",
    "source": "codeforces",
    "title": "Baggage Claim",
    "description": "Baggage Claim",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397377",
      "last_updated": "2025-07-29T14:46:19.397378",
      "source_url": "https://codeforces.com/contest/2097/problem/B",
      "acquisition_method": "api",
      "contest_id": 2097,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2081_D",
    "source": "codeforces",
    "title": "MST in Modulo Graph",
    "description": "MST in Modulo Graph",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number_theory",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397798",
      "last_updated": "2025-07-29T14:46:19.397799",
      "source_url": "https://codeforces.com/contest/2081/problem/D",
      "acquisition_method": "api",
      "contest_id": 2081,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2063_F2",
    "source": "codeforces",
    "title": "Counting Is Not Fun (Hard Version)",
    "description": "Counting Is Not Fun (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398402",
      "last_updated": "2025-07-29T14:46:19.398403",
      "source_url": "https://codeforces.com/contest/2063/problem/F2",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "F2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2063_E",
    "source": "codeforces",
    "title": "Triangle Tree",
    "description": "Triangle Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398411",
      "last_updated": "2025-07-29T14:46:19.398413",
      "source_url": "https://codeforces.com/contest/2063/problem/E",
      "acquisition_method": "api",
      "contest_id": 2063,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2048_F",
    "source": "codeforces",
    "title": "Kevin and Math Class",
    "description": "Kevin and Math Class",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "divide_and_conquer",
      "dp",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.398887",
      "last_updated": "2025-07-29T14:46:19.398889",
      "source_url": "https://codeforces.com/contest/2048/problem/F",
      "acquisition_method": "api",
      "contest_id": 2048,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2028_E",
    "source": "codeforces",
    "title": "Alice's Adventures in the Rabbit Hole",
    "description": "Alice's Adventures in the Rabbit Hole",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "games",
      "greedy",
      "math",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399685",
      "last_updated": "2025-07-29T14:46:19.399687",
      "source_url": "https://codeforces.com/contest/2028/problem/E",
      "acquisition_method": "api",
      "contest_id": 2028,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2026_F",
    "source": "codeforces",
    "title": "Bermart Ice Cream",
    "description": "Bermart Ice Cream",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399744",
      "last_updated": "2025-07-29T14:46:19.399745",
      "source_url": "https://codeforces.com/contest/2026/problem/F",
      "acquisition_method": "api",
      "contest_id": 2026,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2025_F",
    "source": "codeforces",
    "title": "Choose Your Queries",
    "description": "Choose Your Queries",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399776",
      "last_updated": "2025-07-29T14:46:19.399777",
      "source_url": "https://codeforces.com/contest/2025/problem/F",
      "acquisition_method": "api",
      "contest_id": 2025,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2021_E2",
    "source": "codeforces",
    "title": "Digital Village (Hard Version)",
    "description": "Digital Village (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.399872",
      "last_updated": "2025-07-29T14:46:19.399874",
      "source_url": "https://codeforces.com/contest/2021/problem/E2",
      "acquisition_method": "api",
      "contest_id": 2021,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1990_E2",
    "source": "codeforces",
    "title": "Catch the Mole(Hard Version)",
    "description": "Catch the Mole(Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "interactive",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.400835",
      "last_updated": "2025-07-29T14:46:19.400836",
      "source_url": "https://codeforces.com/contest/1990/problem/E2",
      "acquisition_method": "api",
      "contest_id": 1990,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1976_F",
    "source": "codeforces",
    "title": "Remove Bridges",
    "description": "Remove Bridges",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401282",
      "last_updated": "2025-07-29T14:46:19.401284",
      "source_url": "https://codeforces.com/contest/1976/problem/F",
      "acquisition_method": "api",
      "contest_id": 1976,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1976_E",
    "source": "codeforces",
    "title": "Splittable Permutations",
    "description": "Splittable Permutations",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401287",
      "last_updated": "2025-07-29T14:46:19.401288",
      "source_url": "https://codeforces.com/contest/1976/problem/E",
      "acquisition_method": "api",
      "contest_id": 1976,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1967_C",
    "source": "codeforces",
    "title": "Fenwick Tree",
    "description": "Fenwick Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "combinatorics",
      "data_structures",
      "dp",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401616",
      "last_updated": "2025-07-29T14:46:19.401617",
      "source_url": "https://codeforces.com/contest/1967/problem/C",
      "acquisition_method": "api",
      "contest_id": 1967,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1957_F2",
    "source": "codeforces",
    "title": "Frequency Mismatch (Hard Version)",
    "description": "Frequency Mismatch (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "hashing",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401717",
      "last_updated": "2025-07-29T14:46:19.401718",
      "source_url": "https://codeforces.com/contest/1957/problem/F2",
      "acquisition_method": "api",
      "contest_id": 1957,
      "problem_index": "F2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1935_F",
    "source": "codeforces",
    "title": "Andrey's Tree",
    "description": "Andrey's Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402380",
      "last_updated": "2025-07-29T14:46:19.402381",
      "source_url": "https://codeforces.com/contest/1935/problem/F",
      "acquisition_method": "api",
      "contest_id": 1935,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1929_E",
    "source": "codeforces",
    "title": "Sasha and the Happy Tree Cutting",
    "description": "Sasha and the Happy Tree Cutting",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402574",
      "last_updated": "2025-07-29T14:46:19.402576",
      "source_url": "https://codeforces.com/contest/1929/problem/E",
      "acquisition_method": "api",
      "contest_id": 1929,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1903_F",
    "source": "codeforces",
    "title": "Babysitting",
    "description": "Babysitting",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "2-sat",
      "binary_search",
      "data_structures",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403404",
      "last_updated": "2025-07-29T14:46:19.403405",
      "source_url": "https://codeforces.com/contest/1903/problem/F",
      "acquisition_method": "api",
      "contest_id": 1903,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1902_F",
    "source": "codeforces",
    "title": "Trees and XOR Queries Again",
    "description": "Trees and XOR Queries Again",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "graphs",
      "implementation",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403445",
      "last_updated": "2025-07-29T14:46:19.403446",
      "source_url": "https://codeforces.com/contest/1902/problem/F",
      "acquisition_method": "api",
      "contest_id": 1902,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1870_H",
    "source": "codeforces",
    "title": "Standard Graph Problem",
    "description": "Standard Graph Problem",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404187",
      "last_updated": "2025-07-29T14:46:19.404188",
      "source_url": "https://codeforces.com/contest/1870/problem/H",
      "acquisition_method": "api",
      "contest_id": 1870,
      "problem_index": "H",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1843_F2",
    "source": "codeforces",
    "title": "Omsk Metro (hard version)",
    "description": "Omsk Metro (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.409920",
      "last_updated": "2025-07-29T14:46:19.409921",
      "source_url": "https://codeforces.com/contest/1843/problem/F2",
      "acquisition_method": "api",
      "contest_id": 1843,
      "problem_index": "F2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1824_C",
    "source": "codeforces",
    "title": "LuoTianyi and XOR-Tree",
    "description": "LuoTianyi and XOR-Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.410684",
      "last_updated": "2025-07-29T14:46:19.410685",
      "source_url": "https://codeforces.com/contest/1824/problem/C",
      "acquisition_method": "api",
      "contest_id": 1824,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1805_E",
    "source": "codeforces",
    "title": "There Should Be a Lot of Maximums",
    "description": "There Should Be a Lot of Maximums",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411240",
      "last_updated": "2025-07-29T14:46:19.411241",
      "source_url": "https://codeforces.com/contest/1805/problem/E",
      "acquisition_method": "api",
      "contest_id": 1805,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1778_F",
    "source": "codeforces",
    "title": "Maximizing Root",
    "description": "Maximizing Root",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "math",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412070",
      "last_updated": "2025-07-29T14:46:19.412071",
      "source_url": "https://codeforces.com/contest/1778/problem/F",
      "acquisition_method": "api",
      "contest_id": 1778,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1777_F",
    "source": "codeforces",
    "title": "Comfortably Numb",
    "description": "Comfortably Numb",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "divide_and_conquer",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412099",
      "last_updated": "2025-07-29T14:46:19.412100",
      "source_url": "https://codeforces.com/contest/1777/problem/F",
      "acquisition_method": "api",
      "contest_id": 1777,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1720_D2",
    "source": "codeforces",
    "title": "Xor-Subsequence (hard version)",
    "description": "Xor-Subsequence (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "data_structures",
      "dp",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.413867",
      "last_updated": "2025-07-29T14:46:19.413868",
      "source_url": "https://codeforces.com/contest/1720/problem/D2",
      "acquisition_method": "api",
      "contest_id": 1720,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1698_E",
    "source": "codeforces",
    "title": "PermutationForces II",
    "description": "PermutationForces II",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "combinatorics",
      "greedy",
      "sortings",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.414566",
      "last_updated": "2025-07-29T14:46:19.414567",
      "source_url": "https://codeforces.com/contest/1698/problem/E",
      "acquisition_method": "api",
      "contest_id": 1698,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1681_F",
    "source": "codeforces",
    "title": "Unique Occurrences",
    "description": "Unique Occurrences",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "dsu",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415010",
      "last_updated": "2025-07-29T14:46:19.415012",
      "source_url": "https://codeforces.com/contest/1681/problem/F",
      "acquisition_method": "api",
      "contest_id": 1681,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1632_E1",
    "source": "codeforces",
    "title": "Distance Tree (easy version)",
    "description": "Distance Tree (easy version)",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416320",
      "last_updated": "2025-07-29T14:46:19.416322",
      "source_url": "https://codeforces.com/contest/1632/problem/E1",
      "acquisition_method": "api",
      "contest_id": 1632,
      "problem_index": "E1",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1625_E2",
    "source": "codeforces",
    "title": "Cats on the Upgrade (hard version)",
    "description": "Cats on the Upgrade (hard version)",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416471",
      "last_updated": "2025-07-29T14:46:19.416473",
      "source_url": "https://codeforces.com/contest/1625/problem/E2",
      "acquisition_method": "api",
      "contest_id": 1625,
      "problem_index": "E2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1623_E",
    "source": "codeforces",
    "title": "Middle Duplication",
    "description": "Middle Duplication",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416536",
      "last_updated": "2025-07-29T14:46:19.416537",
      "source_url": "https://codeforces.com/contest/1623/problem/E",
      "acquisition_method": "api",
      "contest_id": 1623,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1617_E",
    "source": "codeforces",
    "title": "Christmas Chocolates",
    "description": "Christmas Chocolates",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "games",
      "graphs",
      "implementation",
      "math",
      "number_theory",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416729",
      "last_updated": "2025-07-29T14:46:19.416730",
      "source_url": "https://codeforces.com/contest/1617/problem/E",
      "acquisition_method": "api",
      "contest_id": 1617,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1615_E",
    "source": "codeforces",
    "title": "Purple Crayon",
    "description": "Purple Crayon",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "games",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.416890",
      "last_updated": "2025-07-29T14:46:19.416892",
      "source_url": "https://codeforces.com/contest/1615/problem/E",
      "acquisition_method": "api",
      "contest_id": 1615,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1559_D2",
    "source": "codeforces",
    "title": "Mocha and Diana (Hard Version)",
    "description": "Mocha and Diana (Hard Version)",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "constructive_algorithms",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.418478",
      "last_updated": "2025-07-29T14:46:19.418480",
      "source_url": "https://codeforces.com/contest/1559/problem/D2",
      "acquisition_method": "api",
      "contest_id": 1559,
      "problem_index": "D2",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1540_B",
    "source": "codeforces",
    "title": "Tree Array",
    "description": "Tree Array",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419140",
      "last_updated": "2025-07-29T14:46:19.419141",
      "source_url": "https://codeforces.com/contest/1540/problem/B",
      "acquisition_method": "api",
      "contest_id": 1540,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1521_D",
    "source": "codeforces",
    "title": "Nastia Plays with a Tree",
    "description": "Nastia Plays with a Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.419775",
      "last_updated": "2025-07-29T14:46:19.419776",
      "source_url": "https://codeforces.com/contest/1521/problem/D",
      "acquisition_method": "api",
      "contest_id": 1521,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1508_C",
    "source": "codeforces",
    "title": "Complete the MST",
    "description": "Complete the MST",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "brute_force",
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420194",
      "last_updated": "2025-07-29T14:46:19.420196",
      "source_url": "https://codeforces.com/contest/1508/problem/C",
      "acquisition_method": "api",
      "contest_id": 1508,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1494_D",
    "source": "codeforces",
    "title": "Dogeforces",
    "description": "Dogeforces",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420597",
      "last_updated": "2025-07-29T14:46:19.420598",
      "source_url": "https://codeforces.com/contest/1494/problem/D",
      "acquisition_method": "api",
      "contest_id": 1494,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1486_F",
    "source": "codeforces",
    "title": "Pairs of Paths",
    "description": "Pairs of Paths",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420830",
      "last_updated": "2025-07-29T14:46:19.420832",
      "source_url": "https://codeforces.com/contest/1486/problem/F",
      "acquisition_method": "api",
      "contest_id": 1486,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1453_E",
    "source": "codeforces",
    "title": "Dog Snacks",
    "description": "Dog Snacks",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421643",
      "last_updated": "2025-07-29T14:46:19.421644",
      "source_url": "https://codeforces.com/contest/1453/problem/E",
      "acquisition_method": "api",
      "contest_id": 1453,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1408_G",
    "source": "codeforces",
    "title": "Clusterization Counting",
    "description": "Clusterization Counting",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422801",
      "last_updated": "2025-07-29T14:46:19.422802",
      "source_url": "https://codeforces.com/contest/1408/problem/G",
      "acquisition_method": "api",
      "contest_id": 1408,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1408_E",
    "source": "codeforces",
    "title": "Avoid Rainbow Cycles",
    "description": "Avoid Rainbow Cycles",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422809",
      "last_updated": "2025-07-29T14:46:19.422811",
      "source_url": "https://codeforces.com/contest/1408/problem/E",
      "acquisition_method": "api",
      "contest_id": 1408,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1402_C",
    "source": "codeforces",
    "title": "Star Trek",
    "description": "Star Trek",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "*special",
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "games",
      "graphs",
      "matrices",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.422933",
      "last_updated": "2025-07-29T14:46:19.422934",
      "source_url": "https://codeforces.com/contest/1402/problem/C",
      "acquisition_method": "api",
      "contest_id": 1402,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1303_G",
    "source": "codeforces",
    "title": "Sum of Prefix Sums",
    "description": "Sum of Prefix Sums",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "geometry",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.426730",
      "last_updated": "2025-07-29T14:46:19.426732",
      "source_url": "https://codeforces.com/contest/1303/problem/G",
      "acquisition_method": "api",
      "contest_id": 1303,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1292_C",
    "source": "codeforces",
    "title": "Xenon's Attack on the Gangs",
    "description": "Xenon's Attack on the Gangs",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427032",
      "last_updated": "2025-07-29T14:46:19.427033",
      "source_url": "https://codeforces.com/contest/1292/problem/C",
      "acquisition_method": "api",
      "contest_id": 1292,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1263_F",
    "source": "codeforces",
    "title": "Economic Difficulties",
    "description": "Economic Difficulties",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "flows",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.427797",
      "last_updated": "2025-07-29T14:46:19.427799",
      "source_url": "https://codeforces.com/contest/1263/problem/F",
      "acquisition_method": "api",
      "contest_id": 1263,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1217_F",
    "source": "codeforces",
    "title": "Forced Online Queries Problem",
    "description": "Forced Online Queries Problem",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.428768",
      "last_updated": "2025-07-29T14:46:19.428769",
      "source_url": "https://codeforces.com/contest/1217/problem/F",
      "acquisition_method": "api",
      "contest_id": 1217,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1209_F",
    "source": "codeforces",
    "title": "Koala and Notebook",
    "description": "Koala and Notebook",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "shortest_paths",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430080",
      "last_updated": "2025-07-29T14:46:19.430082",
      "source_url": "https://codeforces.com/contest/1209/problem/F",
      "acquisition_method": "api",
      "contest_id": 1209,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1207_G",
    "source": "codeforces",
    "title": "Indie Album",
    "description": "Indie Album",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "hashing",
      "string_suffix_structures",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.430160",
      "last_updated": "2025-07-29T14:46:19.430161",
      "source_url": "https://codeforces.com/contest/1207/problem/G",
      "acquisition_method": "api",
      "contest_id": 1207,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1120_D",
    "source": "codeforces",
    "title": "Power Tree",
    "description": "Power Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432296",
      "last_updated": "2025-07-29T14:46:19.432297",
      "source_url": "https://codeforces.com/contest/1120/problem/D",
      "acquisition_method": "api",
      "contest_id": 1120,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1111_E",
    "source": "codeforces",
    "title": "Tree",
    "description": "Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432554",
      "last_updated": "2025-07-29T14:46:19.432556",
      "source_url": "https://codeforces.com/contest/1111/problem/E",
      "acquisition_method": "api",
      "contest_id": 1111,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1099_F",
    "source": "codeforces",
    "title": "Cookies",
    "description": "Cookies",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "games",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432951",
      "last_updated": "2025-07-29T14:46:19.432953",
      "source_url": "https://codeforces.com/contest/1099/problem/F",
      "acquisition_method": "api",
      "contest_id": 1099,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1098_C",
    "source": "codeforces",
    "title": "Construct a tree",
    "description": "Construct a tree",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.432985",
      "last_updated": "2025-07-29T14:46:19.432986",
      "source_url": "https://codeforces.com/contest/1098/problem/C",
      "acquisition_method": "api",
      "contest_id": 1098,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1062_E",
    "source": "codeforces",
    "title": "Company",
    "description": "Company",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.433860",
      "last_updated": "2025-07-29T14:46:19.433861",
      "source_url": "https://codeforces.com/contest/1062/problem/E",
      "acquisition_method": "api",
      "contest_id": 1062,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1042_F",
    "source": "codeforces",
    "title": "Leaf Sets",
    "description": "Leaf Sets",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.434322",
      "last_updated": "2025-07-29T14:46:19.434323",
      "source_url": "https://codeforces.com/contest/1042/problem/F",
      "acquisition_method": "api",
      "contest_id": 1042,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_1034_C",
    "source": "codeforces",
    "title": "Region Separation",
    "description": "Region Separation",
    "difficulty": {
      "level": "hard",
      "rating": 2700,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2700,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dp",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.434519",
      "last_updated": "2025-07-29T14:46:19.434520",
      "source_url": "https://codeforces.com/contest/1034/problem/C",
      "acquisition_method": "api",
      "contest_id": 1034,
      "problem_index": "C",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_990_G",
    "source": "codeforces",
    "title": "GCD Counting",
    "description": "GCD Counting",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "divide_and_conquer",
      "dp",
      "dsu",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.435624",
      "last_updated": "2025-07-29T14:46:19.435625",
      "source_url": "https://codeforces.com/contest/990/problem/G",
      "acquisition_method": "api",
      "contest_id": 990,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_960_E",
    "source": "codeforces",
    "title": "Alternating Tree",
    "description": "Alternating Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.436237",
      "last_updated": "2025-07-29T14:46:19.436239",
      "source_url": "https://codeforces.com/contest/960/problem/E",
      "acquisition_method": "api",
      "contest_id": 960,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_856_B",
    "source": "codeforces",
    "title": "Similar Words",
    "description": "Similar Words",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "dp",
      "hashing",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.438565",
      "last_updated": "2025-07-29T14:46:19.438566",
      "source_url": "https://codeforces.com/contest/856/problem/B",
      "acquisition_method": "api",
      "contest_id": 856,
      "problem_index": "B",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_842_E",
    "source": "codeforces",
    "title": "Nikita and game",
    "description": "Nikita and game",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dfs_and_similar",
      "divide_and_conquer",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.438912",
      "last_updated": "2025-07-29T14:46:19.438913",
      "source_url": "https://codeforces.com/contest/842/problem/E",
      "acquisition_method": "api",
      "contest_id": 842,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_830_D",
    "source": "codeforces",
    "title": "Singer House",
    "description": "Singer House",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.439161",
      "last_updated": "2025-07-29T14:46:19.439162",
      "source_url": "https://codeforces.com/contest/830/problem/D",
      "acquisition_method": "api",
      "contest_id": 830,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_758_E",
    "source": "codeforces",
    "title": "Broken Tree",
    "description": "Broken Tree",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.440851",
      "last_updated": "2025-07-29T14:46:19.440852",
      "source_url": "https://codeforces.com/contest/758/problem/E",
      "acquisition_method": "api",
      "contest_id": 758,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_629_E",
    "source": "codeforces",
    "title": "Famil Door and Roads",
    "description": "Famil Door and Roads",
    "difficulty": {
      "level": "hard",
      "rating": 2300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2300,
      "standardized_level": "hard"
    },
    "tags": [
      "combinatorics",
      "data_structures",
      "dfs_and_similar",
      "dp",
      "probabilities",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.443650",
      "last_updated": "2025-07-29T14:46:19.443651",
      "source_url": "https://codeforces.com/contest/629/problem/E",
      "acquisition_method": "api",
      "contest_id": 629,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_613_D",
    "source": "codeforces",
    "title": "Kingdom and its Cities",
    "description": "Kingdom and its Cities",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "divide_and_conquer",
      "dp",
      "graphs",
      "sortings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.444019",
      "last_updated": "2025-07-29T14:46:19.444021",
      "source_url": "https://codeforces.com/contest/613/problem/D",
      "acquisition_method": "api",
      "contest_id": 613,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_601_D",
    "source": "codeforces",
    "title": "Acyclic Organic Compounds",
    "description": "Acyclic Organic Compounds",
    "difficulty": {
      "level": "hard",
      "rating": 2400,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2400,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dsu",
      "hashing",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.444274",
      "last_updated": "2025-07-29T14:46:19.444276",
      "source_url": "https://codeforces.com/contest/601/problem/D",
      "acquisition_method": "api",
      "contest_id": 601,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_372_D",
    "source": "codeforces",
    "title": "Choosing Subtree is Fun",
    "description": "Choosing Subtree is Fun",
    "difficulty": {
      "level": "hard",
      "rating": 2600,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2600,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "data_structures",
      "dfs_and_similar",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.449797",
      "last_updated": "2025-07-29T14:46:19.449799",
      "source_url": "https://codeforces.com/contest/372/problem/D",
      "acquisition_method": "api",
      "contest_id": 372,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_163_E",
    "source": "codeforces",
    "title": "e-Government",
    "description": "e-Government",
    "difficulty": {
      "level": "hard",
      "rating": 2800,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2800,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "strings",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.454365",
      "last_updated": "2025-07-29T14:46:19.454366",
      "source_url": "https://codeforces.com/contest/163/problem/E",
      "acquisition_method": "api",
      "contest_id": 163,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 18.0
  },
  {
    "id": "cf_2118_F",
    "source": "codeforces",
    "title": "Shifts and Swaps",
    "description": "Shifts and Swaps",
    "difficulty": {
      "level": "hard",
      "rating": 3100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "graphs",
      "hashing",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.396879",
      "last_updated": "2025-07-29T14:46:19.396881",
      "source_url": "https://codeforces.com/contest/2118/problem/F",
      "acquisition_method": "api",
      "contest_id": 2118,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_2101_E",
    "source": "codeforces",
    "title": "Kia Bakes a Cake",
    "description": "Kia Bakes a Cake",
    "difficulty": {
      "level": "hard",
      "rating": 3100,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3100,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.397327",
      "last_updated": "2025-07-29T14:46:19.397328",
      "source_url": "https://codeforces.com/contest/2101/problem/E",
      "acquisition_method": "api",
      "contest_id": 2101,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1951_H",
    "source": "codeforces",
    "title": "Thanos Snap",
    "description": "Thanos Snap",
    "difficulty": {
      "level": "hard",
      "rating": 3200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3200,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dp",
      "games",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.401889",
      "last_updated": "2025-07-29T14:46:19.401891",
      "source_url": "https://codeforces.com/contest/1951/problem/H",
      "acquisition_method": "api",
      "contest_id": 1951,
      "problem_index": "H",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1916_G",
    "source": "codeforces",
    "title": "Optimizations From Chelsu",
    "description": "Optimizations From Chelsu",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "divide_and_conquer",
      "dp",
      "number_theory",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.402938",
      "last_updated": "2025-07-29T14:46:19.402940",
      "source_url": "https://codeforces.com/contest/1916/problem/G",
      "acquisition_method": "api",
      "contest_id": 1916,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1889_F",
    "source": "codeforces",
    "title": "Doremy's Average Tree",
    "description": "Doremy's Average Tree",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.403742",
      "last_updated": "2025-07-29T14:46:19.403744",
      "source_url": "https://codeforces.com/contest/1889/problem/F",
      "acquisition_method": "api",
      "contest_id": 1889,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1876_G",
    "source": "codeforces",
    "title": "Clubstep",
    "description": "Clubstep",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "brute_force",
      "data_structures",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404034",
      "last_updated": "2025-07-29T14:46:19.404036",
      "source_url": "https://codeforces.com/contest/1876/problem/G",
      "acquisition_method": "api",
      "contest_id": 1876,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1859_F",
    "source": "codeforces",
    "title": "Teleportation in Byteland",
    "description": "Teleportation in Byteland",
    "difficulty": {
      "level": "hard",
      "rating": 3200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "graphs",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.404559",
      "last_updated": "2025-07-29T14:46:19.404560",
      "source_url": "https://codeforces.com/contest/1859/problem/F",
      "acquisition_method": "api",
      "contest_id": 1859,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1801_E",
    "source": "codeforces",
    "title": "Gasoline prices",
    "description": "Gasoline prices",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "dsu",
      "hashing",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.411387",
      "last_updated": "2025-07-29T14:46:19.411388",
      "source_url": "https://codeforces.com/contest/1801/problem/E",
      "acquisition_method": "api",
      "contest_id": 1801,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1776_M",
    "source": "codeforces",
    "title": "Parmigiana With Seafood",
    "description": "Parmigiana With Seafood",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412131",
      "last_updated": "2025-07-29T14:46:19.412133",
      "source_url": "https://codeforces.com/contest/1776/problem/M",
      "acquisition_method": "api",
      "contest_id": 1776,
      "problem_index": "M",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1774_G",
    "source": "codeforces",
    "title": "Segment Covering",
    "description": "Segment Covering",
    "difficulty": {
      "level": "hard",
      "rating": 3200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3200,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "combinatorics",
      "constructive_algorithms",
      "data_structures",
      "dp",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412241",
      "last_updated": "2025-07-29T14:46:19.412242",
      "source_url": "https://codeforces.com/contest/1774/problem/G",
      "acquisition_method": "api",
      "contest_id": 1774,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1763_F",
    "source": "codeforces",
    "title": "Edge Queries",
    "description": "Edge Queries",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.412695",
      "last_updated": "2025-07-29T14:46:19.412696",
      "source_url": "https://codeforces.com/contest/1763/problem/F",
      "acquisition_method": "api",
      "contest_id": 1763,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1654_G",
    "source": "codeforces",
    "title": "Snowy Mountain",
    "description": "Snowy Mountain",
    "difficulty": {
      "level": "hard",
      "rating": 2900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2900,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "graphs",
      "greedy",
      "shortest_paths",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415862",
      "last_updated": "2025-07-29T14:46:19.415863",
      "source_url": "https://codeforces.com/contest/1654/problem/G",
      "acquisition_method": "api",
      "contest_id": 1654,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1648_E",
    "source": "codeforces",
    "title": "Air Reform",
    "description": "Air Reform",
    "difficulty": {
      "level": "hard",
      "rating": 3200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "dfs_and_similar",
      "divide_and_conquer",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.415976",
      "last_updated": "2025-07-29T14:46:19.415978",
      "source_url": "https://codeforces.com/contest/1648/problem/E",
      "acquisition_method": "api",
      "contest_id": 1648,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1580_D",
    "source": "codeforces",
    "title": "Subsequence",
    "description": "Subsequence",
    "difficulty": {
      "level": "hard",
      "rating": 2900,
      "source_scale": "codeforces_rating",
      "standardized_rating": 2900,
      "standardized_level": "hard"
    },
    "tags": [
      "brute_force",
      "divide_and_conquer",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.417848",
      "last_updated": "2025-07-29T14:46:19.417849",
      "source_url": "https://codeforces.com/contest/1580/problem/D",
      "acquisition_method": "api",
      "contest_id": 1580,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1495_F",
    "source": "codeforces",
    "title": "Squares",
    "description": "Squares",
    "difficulty": {
      "level": "hard",
      "rating": 3300,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3300,
      "standardized_level": "hard"
    },
    "tags": [
      "constructive_algorithms",
      "data_structures",
      "dp",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.420552",
      "last_updated": "2025-07-29T14:46:19.420553",
      "source_url": "https://codeforces.com/contest/1495/problem/F",
      "acquisition_method": "api",
      "contest_id": 1495,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1442_E",
    "source": "codeforces",
    "title": "Black, White and Grey Tree",
    "description": "Black, White and Grey Tree",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "binary_search",
      "constructive_algorithms",
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.421947",
      "last_updated": "2025-07-29T14:46:19.421948",
      "source_url": "https://codeforces.com/contest/1442/problem/E",
      "acquisition_method": "api",
      "contest_id": 1442,
      "problem_index": "E",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1381_D",
    "source": "codeforces",
    "title": "The Majestic Brown Tree Snake",
    "description": "The Majestic Brown Tree Snake",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "dfs_and_similar",
      "dp",
      "greedy",
      "trees",
      "two_pointers"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423515",
      "last_updated": "2025-07-29T14:46:19.423517",
      "source_url": "https://codeforces.com/contest/1381/problem/D",
      "acquisition_method": "api",
      "contest_id": 1381,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1368_G",
    "source": "codeforces",
    "title": "Shifting Dominoes",
    "description": "Shifting Dominoes",
    "difficulty": {
      "level": "hard",
      "rating": 3200,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3200,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "geometry",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.423863",
      "last_updated": "2025-07-29T14:46:19.423865",
      "source_url": "https://codeforces.com/contest/1368/problem/G",
      "acquisition_method": "api",
      "contest_id": 1368,
      "problem_index": "G",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1336_F",
    "source": "codeforces",
    "title": "Journey",
    "description": "Journey",
    "difficulty": {
      "level": "hard",
      "rating": 3500,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3500,
      "standardized_level": "hard"
    },
    "tags": [
      "data_structures",
      "divide_and_conquer",
      "graphs",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.425547",
      "last_updated": "2025-07-29T14:46:19.425549",
      "source_url": "https://codeforces.com/contest/1336/problem/F",
      "acquisition_method": "api",
      "contest_id": 1336,
      "problem_index": "F",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  },
  {
    "id": "cf_1299_D",
    "source": "codeforces",
    "title": "Around the World",
    "description": "Around the World",
    "difficulty": {
      "level": "hard",
      "rating": 3000,
      "source_scale": "codeforces_rating",
      "standardized_rating": 3000,
      "standardized_level": "hard"
    },
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs_and_similar",
      "dp",
      "graphs",
      "graphs",
      "math",
      "trees"
    ],
    "company_tags": [],
    "constraints": {
      "time_limit": null,
      "memory_limit": null
    },
    "test_cases": [],
    "editorial": null,
    "metadata": {
      "created_date": "2025-07-29T14:46:19.426848",
      "last_updated": "2025-07-29T14:46:19.426849",
      "source_url": "https://codeforces.com/contest/1299/problem/D",
      "acquisition_method": "api",
      "contest_id": 1299,
      "problem_index": "D",
      "solved_count": 0
    },
    "google_relevance_score": 17.0
  }
]