{
  "export_date": "2025-07-29T14:42:28.380579",
  "description": "Curated interview practice problems (medium difficulty, high relevance)",
  "selection_criteria": {
    "difficulty": "medium",
    "min_google_relevance": 5.0,
    "rating_range": "1200-2000"
  },
  "count": 19,
  "problems": [
    {
      "id": "cf_2126_F",
      "source": "codeforces",
      "title": "1-1-1, Free Tree!",
      "description": "Problem: 1-1-1, Free Tree!\nTags: brute_force, data_structures, dfs_and_similar, graphs, implementation, trees\nRating: 2000",
      "difficulty": {
        "level": "medium",
        "rating": 2000,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "brute_force",
        "data_structures",
        "dfs_and_similar",
        "graphs",
        "implementation",
        "trees"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 9.0,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 2000 rating"
      },
      "source_url": "https://codeforces.com/contest/2126/problem/F",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370212",
        "last_updated": "2025-07-29T14:42:28.370214",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2124_D",
      "source": "codeforces",
      "title": "Make a Palindrome",
      "description": "Problem: Make a Palindrome\nTags: greedy, sortings, two_pointers\nRating: 1700",
      "difficulty": {
        "level": "medium",
        "rating": 1700,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "greedy",
        "sortings",
        "two_pointers"
      ],
      "company_tags": [],
      "google_relevance_score": 6.75,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1700 rating"
      },
      "source_url": "https://codeforces.com/contest/2124/problem/D",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370701",
        "last_updated": "2025-07-29T14:42:28.370703",
        "acquisition_method": "api",
        "original_points": 1750.0
      }
    },
    {
      "id": "cf_2124_C",
      "source": "codeforces",
      "title": "Subset Multiplication",
      "description": "Problem: Subset Multiplication\nTags: constructive_algorithms, greedy, math, number_theory\nRating: 1300",
      "difficulty": {
        "level": "medium",
        "rating": 1300,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "constructive_algorithms",
        "greedy",
        "math",
        "number_theory"
      ],
      "company_tags": [],
      "google_relevance_score": 6.75,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1300 rating"
      },
      "source_url": "https://codeforces.com/contest/2124/problem/C",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370716",
        "last_updated": "2025-07-29T14:42:28.370718",
        "acquisition_method": "api",
        "original_points": 1250.0
      }
    },
    {
      "id": "cf_2123_E",
      "source": "codeforces",
      "title": "MEX Count",
      "description": "Problem: MEX Count\nTags: binary_search, data_structures, greedy, sortings, two_pointers\nRating: 1400",
      "difficulty": {
        "level": "medium",
        "rating": 1400,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "binary_search",
        "data_structures",
        "greedy",
        "sortings",
        "two_pointers"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1400 rating"
      },
      "source_url": "https://codeforces.com/contest/2123/problem/E",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370782",
        "last_updated": "2025-07-29T14:42:28.370783",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2121_G",
      "source": "codeforces",
      "title": "Gangsta",
      "description": "Problem: Gangsta\nTags: data_structures, divide_and_conquer, math, sortings\nRating: 1900",
      "difficulty": {
        "level": "medium",
        "rating": 1900,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "data_structures",
        "divide_and_conquer",
        "math",
        "sortings"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.0,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1900 rating"
      },
      "source_url": "https://codeforces.com/contest/2121/problem/G",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370952",
        "last_updated": "2025-07-29T14:42:28.370954",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2121_F",
      "source": "codeforces",
      "title": "Yamakasi",
      "description": "Problem: Yamakasi\nTags: binary_search, brute_force, data_structures, greedy, two_pointers\nRating: 1800",
      "difficulty": {
        "level": "medium",
        "rating": 1800,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "binary_search",
        "brute_force",
        "data_structures",
        "greedy",
        "two_pointers"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1800 rating"
      },
      "source_url": "https://codeforces.com/contest/2121/problem/F",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370968",
        "last_updated": "2025-07-29T14:42:28.370969",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2121_E",
      "source": "codeforces",
      "title": "Sponsor of Your Problems",
      "description": "Problem: Sponsor of Your Problems\nTags: dp, greedy, implementation, strings\nRating: 1500",
      "difficulty": {
        "level": "medium",
        "rating": 1500,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "dp",
        "greedy",
        "implementation",
        "strings"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.0,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1500 rating"
      },
      "source_url": "https://codeforces.com/contest/2121/problem/E",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370981",
        "last_updated": "2025-07-29T14:42:28.370983",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2121_D",
      "source": "codeforces",
      "title": "1709",
      "description": "Problem: 1709\nTags: implementation, sortings\nRating: 1300",
      "difficulty": {
        "level": "medium",
        "rating": 1300,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "implementation",
        "sortings"
      ],
      "company_tags": [],
      "google_relevance_score": 5.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1300 rating"
      },
      "source_url": "https://codeforces.com/contest/2121/problem/D",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.370992",
        "last_updated": "2025-07-29T14:42:28.370994",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2120_C",
      "source": "codeforces",
      "title": "Divine Tree",
      "description": "Problem: Divine Tree\nTags: constructive_algorithms, greedy, math, sortings, trees\nRating: 1400",
      "difficulty": {
        "level": "medium",
        "rating": 1400,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "constructive_algorithms",
        "greedy",
        "math",
        "sortings",
        "trees"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1400 rating"
      },
      "source_url": "https://codeforces.com/contest/2120/problem/C",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371106",
        "last_updated": "2025-07-29T14:42:28.371107",
        "acquisition_method": "api",
        "original_points": 1250.0
      }
    },
    {
      "id": "cf_2119_C",
      "source": "codeforces",
      "title": "A Good Problem",
      "description": "Problem: A Good Problem\nTags: bitmasks, constructive_algorithms, math\nRating: 1300",
      "difficulty": {
        "level": "medium",
        "rating": 1300,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "bitmasks",
        "constructive_algorithms",
        "math"
      ],
      "company_tags": [],
      "google_relevance_score": 5.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1300 rating"
      },
      "source_url": "https://codeforces.com/contest/2119/problem/C",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371184",
        "last_updated": "2025-07-29T14:42:28.371185",
        "acquisition_method": "api",
        "original_points": 1500.0
      }
    },
    {
      "id": "cf_2118_D1",
      "source": "codeforces",
      "title": "Red Light, Green Light (Easy version)",
      "description": "Problem: Red Light, Green Light (Easy version)\nTags: brute_force, dfs_and_similar, dp, graphs, implementation, number_theory\nRating: 1700",
      "difficulty": {
        "level": "medium",
        "rating": 1700,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "brute_force",
        "dfs_and_similar",
        "dp",
        "graphs",
        "implementation",
        "number_theory"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1700 rating"
      },
      "source_url": "https://codeforces.com/contest/2118/problem/D1",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371277",
        "last_updated": "2025-07-29T14:42:28.371279",
        "acquisition_method": "api",
        "original_points": 1250.0
      }
    },
    {
      "id": "cf_2118_C",
      "source": "codeforces",
      "title": "Make It Beautiful",
      "description": "Problem: Make It Beautiful\nTags: bitmasks, data_structures, greedy, math\nRating: 1300",
      "difficulty": {
        "level": "medium",
        "rating": 1300,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "bitmasks",
        "data_structures",
        "greedy",
        "math"
      ],
      "company_tags": [],
      "google_relevance_score": 6.75,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1300 rating"
      },
      "source_url": "https://codeforces.com/contest/2118/problem/C",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371291",
        "last_updated": "2025-07-29T14:42:28.371293",
        "acquisition_method": "api",
        "original_points": 1000.0
      }
    },
    {
      "id": "cf_2117_G",
      "source": "codeforces",
      "title": "Omg Graph",
      "description": "Problem: Omg Graph\nTags: brute_force, dsu, graphs, greedy, shortest_paths, sortings\nRating: 1900",
      "difficulty": {
        "level": "medium",
        "rating": 1900,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "brute_force",
        "dsu",
        "graphs",
        "greedy",
        "shortest_paths",
        "sortings"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1900 rating"
      },
      "source_url": "https://codeforces.com/contest/2117/problem/G",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371342",
        "last_updated": "2025-07-29T14:42:28.371344",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2117_E",
      "source": "codeforces",
      "title": "Lost Soul",
      "description": "Problem: Lost Soul\nTags: brute_force, greedy\nRating: 1600",
      "difficulty": {
        "level": "medium",
        "rating": 1600,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "brute_force",
        "greedy"
      ],
      "company_tags": [],
      "google_relevance_score": 5.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1600 rating"
      },
      "source_url": "https://codeforces.com/contest/2117/problem/E",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371367",
        "last_updated": "2025-07-29T14:42:28.371368",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2116_B",
      "source": "codeforces",
      "title": "Gellyfish and Baby's Breath",
      "description": "Problem: Gellyfish and Baby's Breath\nTags: greedy, math, sortings\nRating: 1300",
      "difficulty": {
        "level": "medium",
        "rating": 1300,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "greedy",
        "math",
        "sortings"
      ],
      "company_tags": [],
      "google_relevance_score": 6.75,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1300 rating"
      },
      "source_url": "https://codeforces.com/contest/2116/problem/B",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371432",
        "last_updated": "2025-07-29T14:42:28.371434",
        "acquisition_method": "api",
        "original_points": 750.0
      }
    },
    {
      "id": "cf_2115_A",
      "source": "codeforces",
      "title": "Gellyfish and Flaming Peony",
      "description": "Problem: Gellyfish and Flaming Peony\nTags: constructive_algorithms, dp, math, number_theory\nRating: 1500",
      "difficulty": {
        "level": "medium",
        "rating": 1500,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "constructive_algorithms",
        "dp",
        "math",
        "number_theory"
      ],
      "company_tags": [],
      "google_relevance_score": 6.75,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1500 rating"
      },
      "source_url": "https://codeforces.com/contest/2115/problem/A",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371539",
        "last_updated": "2025-07-29T14:42:28.371541",
        "acquisition_method": "api",
        "original_points": 500.0
      }
    },
    {
      "id": "cf_2114_F",
      "source": "codeforces",
      "title": "Small Operations",
      "description": "Problem: Small Operations\nTags: binary_search, brute_force, dfs_and_similar, dp, math, number_theory, sortings\nRating: 2000",
      "difficulty": {
        "level": "medium",
        "rating": 2000,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "binary_search",
        "brute_force",
        "dfs_and_similar",
        "dp",
        "math",
        "number_theory",
        "sortings"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.5,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 2000 rating"
      },
      "source_url": "https://codeforces.com/contest/2114/problem/F",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371577",
        "last_updated": "2025-07-29T14:42:28.371578",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2114_E",
      "source": "codeforces",
      "title": "Kirei Attacks the Estate",
      "description": "Problem: Kirei Attacks the Estate\nTags: dfs_and_similar, dp, greedy, trees\nRating: 1400",
      "difficulty": {
        "level": "medium",
        "rating": 1400,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "dfs_and_similar",
        "dp",
        "greedy",
        "trees"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 7.25,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1400 rating"
      },
      "source_url": "https://codeforces.com/contest/2114/problem/E",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371591",
        "last_updated": "2025-07-29T14:42:28.371592",
        "acquisition_method": "api",
        "original_points": null
      }
    },
    {
      "id": "cf_2114_D",
      "source": "codeforces",
      "title": "Come a Little Closer",
      "description": "Problem: Come a Little Closer\nTags: brute_force, greedy, implementation, math\nRating: 1400",
      "difficulty": {
        "level": "medium",
        "rating": 1400,
        "source_scale": "codeforces_rating"
      },
      "tags": [
        "brute_force",
        "greedy",
        "implementation",
        "math"
      ],
      "company_tags": [
        "google"
      ],
      "google_relevance_score": 8.0,
      "constraints": {
        "time_limit": "2000ms",
        "memory_limit": "256MB",
        "input_size": "Based on 1400 rating"
      },
      "source_url": "https://codeforces.com/contest/2114/problem/D",
      "metadata": {
        "created_date": "2025-07-29T14:42:28.371606",
        "last_updated": "2025-07-29T14:42:28.371607",
        "acquisition_method": "api",
        "original_points": null
      }
    }
  ]
}